{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":{"_events":{"close":[null,null],"end":[null,null]},"_eventsCount":8,"_hadError":false,"_host":null,"_httpMessage":{"_closed":false,"_contentLength":null,"_defaultKeepAlive":true,"_events":{},"_eventsCount":1,"_expect_continue":false,"_hasBody":true,"_header":null,"_headerSent":false,"_keepAliveTimeout":5000,"_last":false,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_sent100":false,"_trailer":"","chunkedEncoding":false,"destroyed":false,"finished":false,"locals":{},"maxRequestsOnConnectionReached":false,"outputData":[],"outputSize":0,"req":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":"[Circular]","complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","62b99dec-c78c-4aa2-8472-98a2b643a9ce","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":"[Circular]","socket":"[Circular]","statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"},"sendDate":true,"shouldKeepAlive":true,"socket":"[Circular]","useChunkedEncodingByDefault":true,"writable":true},"_parent":null,"_paused":false,"_pendingData":null,"_pendingEncoding":"","_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":true,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":true,"objectMode":false,"pipes":[],"readableListening":false,"reading":true,"readingMore":false,"resumeScheduled":false,"sync":false},"_server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0},"_sockname":null,"_writableState":{"afterWriteTickInfo":null,"allBuffers":true,"allNoop":true,"autoDestroy":true,"bufferProcessing":false,"buffered":[],"bufferedIndex":0,"closeEmitted":false,"closed":false,"constructed":true,"corked":0,"decodeStrings":false,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"ended":false,"ending":false,"errorEmitted":false,"errored":null,"finalCalled":false,"finished":false,"highWaterMark":16384,"length":0,"needDrain":false,"objectMode":false,"pendingcb":0,"prefinished":false,"sync":true,"writecb":null,"writelen":0,"writing":false},"allowHalfOpen":true,"connecting":false,"parser":{"_consumed":true,"_headers":[],"_url":"","incoming":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":"[Circular]","complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","62b99dec-c78c-4aa2-8472-98a2b643a9ce","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":{"_closed":false,"_contentLength":null,"_defaultKeepAlive":true,"_events":{},"_eventsCount":1,"_expect_continue":false,"_hasBody":true,"_header":null,"_headerSent":false,"_keepAliveTimeout":5000,"_last":false,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_sent100":false,"_trailer":"","chunkedEncoding":false,"destroyed":false,"finished":false,"locals":{},"maxRequestsOnConnectionReached":false,"outputData":[],"outputSize":0,"req":"[Circular]","sendDate":true,"shouldKeepAlive":true,"socket":"[Circular]","useChunkedEncodingByDefault":true,"writable":true},"socket":"[Circular]","statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"},"maxHeaderPairs":2000,"outgoing":null,"socket":"[Circular]"},"server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0}},"complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"level":"error","method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","62b99dec-c78c-4aa2-8472-98a2b643a9ce","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":{"_closed":false,"_contentLength":null,"_defaultKeepAlive":true,"_events":{},"_eventsCount":1,"_expect_continue":false,"_hasBody":true,"_header":null,"_headerSent":false,"_keepAliveTimeout":5000,"_last":false,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_sent100":false,"_trailer":"","chunkedEncoding":false,"destroyed":false,"finished":false,"locals":{},"maxRequestsOnConnectionReached":false,"outputData":[],"outputSize":0,"req":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":{"_events":{"close":[null,null],"end":[null,null]},"_eventsCount":8,"_hadError":false,"_host":null,"_httpMessage":"[Circular]","_parent":null,"_paused":false,"_pendingData":null,"_pendingEncoding":"","_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":true,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":true,"objectMode":false,"pipes":[],"readableListening":false,"reading":true,"readingMore":false,"resumeScheduled":false,"sync":false},"_server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0},"_sockname":null,"_writableState":{"afterWriteTickInfo":null,"allBuffers":true,"allNoop":true,"autoDestroy":true,"bufferProcessing":false,"buffered":[],"bufferedIndex":0,"closeEmitted":false,"closed":false,"constructed":true,"corked":0,"decodeStrings":false,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"ended":false,"ending":false,"errorEmitted":false,"errored":null,"finalCalled":false,"finished":false,"highWaterMark":16384,"length":0,"needDrain":false,"objectMode":false,"pendingcb":0,"prefinished":false,"sync":true,"writecb":null,"writelen":0,"writing":false},"allowHalfOpen":true,"connecting":false,"parser":{"_consumed":true,"_headers":[],"_url":"","incoming":"[Circular]","maxHeaderPairs":2000,"outgoing":null,"socket":"[Circular]"},"server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0}},"complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","62b99dec-c78c-4aa2-8472-98a2b643a9ce","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":"[Circular]","socket":{"_events":{"close":[null,null],"end":[null,null]},"_eventsCount":8,"_hadError":false,"_host":null,"_httpMessage":"[Circular]","_parent":null,"_paused":false,"_pendingData":null,"_pendingEncoding":"","_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":true,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":true,"objectMode":false,"pipes":[],"readableListening":false,"reading":true,"readingMore":false,"resumeScheduled":false,"sync":false},"_server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0},"_sockname":null,"_writableState":{"afterWriteTickInfo":null,"allBuffers":true,"allNoop":true,"autoDestroy":true,"bufferProcessing":false,"buffered":[],"bufferedIndex":0,"closeEmitted":false,"closed":false,"constructed":true,"corked":0,"decodeStrings":false,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"ended":false,"ending":false,"errorEmitted":false,"errored":null,"finalCalled":false,"finished":false,"highWaterMark":16384,"length":0,"needDrain":false,"objectMode":false,"pendingcb":0,"prefinished":false,"sync":true,"writecb":null,"writelen":0,"writing":false},"allowHalfOpen":true,"connecting":false,"parser":{"_consumed":true,"_headers":[],"_url":"","incoming":"[Circular]","maxHeaderPairs":2000,"outgoing":null,"socket":"[Circular]"},"server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0}},"statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"},"sendDate":true,"shouldKeepAlive":true,"socket":{"_events":{"close":[null,null],"end":[null,null]},"_eventsCount":8,"_hadError":false,"_host":null,"_httpMessage":"[Circular]","_parent":null,"_paused":false,"_pendingData":null,"_pendingEncoding":"","_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":true,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":true,"objectMode":false,"pipes":[],"readableListening":false,"reading":true,"readingMore":false,"resumeScheduled":false,"sync":false},"_server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0},"_sockname":null,"_writableState":{"afterWriteTickInfo":null,"allBuffers":true,"allNoop":true,"autoDestroy":true,"bufferProcessing":false,"buffered":[],"bufferedIndex":0,"closeEmitted":false,"closed":false,"constructed":true,"corked":0,"decodeStrings":false,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"ended":false,"ending":false,"errorEmitted":false,"errored":null,"finalCalled":false,"finished":false,"highWaterMark":16384,"length":0,"needDrain":false,"objectMode":false,"pendingcb":0,"prefinished":false,"sync":true,"writecb":null,"writelen":0,"writing":false},"allowHalfOpen":true,"connecting":false,"parser":{"_consumed":true,"_headers":[],"_url":"","incoming":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":"[Circular]","complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","62b99dec-c78c-4aa2-8472-98a2b643a9ce","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":"[Circular]","socket":"[Circular]","statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"},"maxHeaderPairs":2000,"outgoing":null,"socket":"[Circular]"},"server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0}},"useChunkedEncodingByDefault":true,"writable":true},"socket":{"_events":{"close":[null,null],"end":[null,null]},"_eventsCount":8,"_hadError":false,"_host":null,"_httpMessage":{"_closed":false,"_contentLength":null,"_defaultKeepAlive":true,"_events":{},"_eventsCount":1,"_expect_continue":false,"_hasBody":true,"_header":null,"_headerSent":false,"_keepAliveTimeout":5000,"_last":false,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_sent100":false,"_trailer":"","chunkedEncoding":false,"destroyed":false,"finished":false,"locals":{},"maxRequestsOnConnectionReached":false,"outputData":[],"outputSize":0,"req":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":"[Circular]","complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","62b99dec-c78c-4aa2-8472-98a2b643a9ce","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":"[Circular]","socket":"[Circular]","statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"},"sendDate":true,"shouldKeepAlive":true,"socket":"[Circular]","useChunkedEncodingByDefault":true,"writable":true},"_parent":null,"_paused":false,"_pendingData":null,"_pendingEncoding":"","_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":true,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":true,"objectMode":false,"pipes":[],"readableListening":false,"reading":true,"readingMore":false,"resumeScheduled":false,"sync":false},"_server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0},"_sockname":null,"_writableState":{"afterWriteTickInfo":null,"allBuffers":true,"allNoop":true,"autoDestroy":true,"bufferProcessing":false,"buffered":[],"bufferedIndex":0,"closeEmitted":false,"closed":false,"constructed":true,"corked":0,"decodeStrings":false,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"ended":false,"ending":false,"errorEmitted":false,"errored":null,"finalCalled":false,"finished":false,"highWaterMark":16384,"length":0,"needDrain":false,"objectMode":false,"pendingcb":0,"prefinished":false,"sync":true,"writecb":null,"writelen":0,"writing":false},"allowHalfOpen":true,"connecting":false,"parser":{"_consumed":true,"_headers":[],"_url":"","incoming":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":"[Circular]","complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","62b99dec-c78c-4aa2-8472-98a2b643a9ce","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":{"_closed":false,"_contentLength":null,"_defaultKeepAlive":true,"_events":{},"_eventsCount":1,"_expect_continue":false,"_hasBody":true,"_header":null,"_headerSent":false,"_keepAliveTimeout":5000,"_last":false,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_sent100":false,"_trailer":"","chunkedEncoding":false,"destroyed":false,"finished":false,"locals":{},"maxRequestsOnConnectionReached":false,"outputData":[],"outputSize":0,"req":"[Circular]","sendDate":true,"shouldKeepAlive":true,"socket":"[Circular]","useChunkedEncodingByDefault":true,"writable":true},"socket":"[Circular]","statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"},"maxHeaderPairs":2000,"outgoing":null,"socket":"[Circular]"},"server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0}},"statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"}
{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/restaurant","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/restaurant","path":"/api/restaurant","pathname":"/api/restaurant","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":{"_events":{"close":[null,null],"end":[null,null]},"_eventsCount":8,"_hadError":false,"_host":null,"_httpMessage":{"_closed":false,"_contentLength":null,"_defaultKeepAlive":true,"_events":{},"_eventsCount":1,"_expect_continue":false,"_hasBody":true,"_header":null,"_headerSent":false,"_keepAliveTimeout":5000,"_last":false,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_sent100":false,"_trailer":"","chunkedEncoding":false,"destroyed":false,"finished":false,"locals":{},"maxRequestsOnConnectionReached":false,"outputData":[],"outputSize":0,"req":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/restaurant","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/restaurant","path":"/api/restaurant","pathname":"/api/restaurant","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":"[Circular]","complete":false,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/restaurant","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","11767c0e-8f28-476e-976e-fba76a99c7ee","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":"[Circular]","socket":"[Circular]","statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/restaurant"},"sendDate":true,"shouldKeepAlive":true,"socket":"[Circular]","useChunkedEncodingByDefault":true,"writable":true},"_parent":null,"_paused":false,"_pendingData":null,"_pendingEncoding":"","_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":true,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":true,"objectMode":false,"pipes":[],"readableListening":false,"reading":true,"readingMore":false,"resumeScheduled":false,"sync":false},"_server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0},"_sockname":null,"_writableState":{"afterWriteTickInfo":null,"allBuffers":true,"allNoop":true,"autoDestroy":true,"bufferProcessing":false,"buffered":[],"bufferedIndex":0,"closeEmitted":false,"closed":false,"constructed":true,"corked":0,"decodeStrings":false,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"ended":false,"ending":false,"errorEmitted":false,"errored":null,"finalCalled":false,"finished":false,"highWaterMark":16384,"length":0,"needDrain":false,"objectMode":false,"pendingcb":0,"prefinished":false,"sync":true,"writecb":null,"writelen":0,"writing":false},"allowHalfOpen":true,"connecting":false,"parser":{"_consumed":true,"_headers":[],"_url":"","incoming":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/restaurant","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/restaurant","path":"/api/restaurant","pathname":"/api/restaurant","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":"[Circular]","complete":false,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/restaurant","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","11767c0e-8f28-476e-976e-fba76a99c7ee","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":{"_closed":false,"_contentLength":null,"_defaultKeepAlive":true,"_events":{},"_eventsCount":1,"_expect_continue":false,"_hasBody":true,"_header":null,"_headerSent":false,"_keepAliveTimeout":5000,"_last":false,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_sent100":false,"_trailer":"","chunkedEncoding":false,"destroyed":false,"finished":false,"locals":{},"maxRequestsOnConnectionReached":false,"outputData":[],"outputSize":0,"req":"[Circular]","sendDate":true,"shouldKeepAlive":true,"socket":"[Circular]","useChunkedEncodingByDefault":true,"writable":true},"socket":"[Circular]","statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/restaurant"},"maxHeaderPairs":2000,"outgoing":null,"socket":"[Circular]"},"server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0}},"complete":false,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"level":"error","method":"DELETE","originalUrl":"/api/restaurant","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","11767c0e-8f28-476e-976e-fba76a99c7ee","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":{"_closed":false,"_contentLength":null,"_defaultKeepAlive":true,"_events":{},"_eventsCount":1,"_expect_continue":false,"_hasBody":true,"_header":null,"_headerSent":false,"_keepAliveTimeout":5000,"_last":false,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_sent100":false,"_trailer":"","chunkedEncoding":false,"destroyed":false,"finished":false,"locals":{},"maxRequestsOnConnectionReached":false,"outputData":[],"outputSize":0,"req":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/restaurant","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/restaurant","path":"/api/restaurant","pathname":"/api/restaurant","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":{"_events":{"close":[null,null],"end":[null,null]},"_eventsCount":8,"_hadError":false,"_host":null,"_httpMessage":"[Circular]","_parent":null,"_paused":false,"_pendingData":null,"_pendingEncoding":"","_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":true,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":true,"objectMode":false,"pipes":[],"readableListening":false,"reading":true,"readingMore":false,"resumeScheduled":false,"sync":false},"_server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0},"_sockname":null,"_writableState":{"afterWriteTickInfo":null,"allBuffers":true,"allNoop":true,"autoDestroy":true,"bufferProcessing":false,"buffered":[],"bufferedIndex":0,"closeEmitted":false,"closed":false,"constructed":true,"corked":0,"decodeStrings":false,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"ended":false,"ending":false,"errorEmitted":false,"errored":null,"finalCalled":false,"finished":false,"highWaterMark":16384,"length":0,"needDrain":false,"objectMode":false,"pendingcb":0,"prefinished":false,"sync":true,"writecb":null,"writelen":0,"writing":false},"allowHalfOpen":true,"connecting":false,"parser":{"_consumed":true,"_headers":[],"_url":"","incoming":"[Circular]","maxHeaderPairs":2000,"outgoing":null,"socket":"[Circular]"},"server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0}},"complete":false,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/restaurant","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","11767c0e-8f28-476e-976e-fba76a99c7ee","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":"[Circular]","socket":{"_events":{"close":[null,null],"end":[null,null]},"_eventsCount":8,"_hadError":false,"_host":null,"_httpMessage":"[Circular]","_parent":null,"_paused":false,"_pendingData":null,"_pendingEncoding":"","_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":true,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":true,"objectMode":false,"pipes":[],"readableListening":false,"reading":true,"readingMore":false,"resumeScheduled":false,"sync":false},"_server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0},"_sockname":null,"_writableState":{"afterWriteTickInfo":null,"allBuffers":true,"allNoop":true,"autoDestroy":true,"bufferProcessing":false,"buffered":[],"bufferedIndex":0,"closeEmitted":false,"closed":false,"constructed":true,"corked":0,"decodeStrings":false,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"ended":false,"ending":false,"errorEmitted":false,"errored":null,"finalCalled":false,"finished":false,"highWaterMark":16384,"length":0,"needDrain":false,"objectMode":false,"pendingcb":0,"prefinished":false,"sync":true,"writecb":null,"writelen":0,"writing":false},"allowHalfOpen":true,"connecting":false,"parser":{"_consumed":true,"_headers":[],"_url":"","incoming":"[Circular]","maxHeaderPairs":2000,"outgoing":null,"socket":"[Circular]"},"server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0}},"statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/restaurant"},"sendDate":true,"shouldKeepAlive":true,"socket":{"_events":{"close":[null,null],"end":[null,null]},"_eventsCount":8,"_hadError":false,"_host":null,"_httpMessage":"[Circular]","_parent":null,"_paused":false,"_pendingData":null,"_pendingEncoding":"","_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":true,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":true,"objectMode":false,"pipes":[],"readableListening":false,"reading":true,"readingMore":false,"resumeScheduled":false,"sync":false},"_server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0},"_sockname":null,"_writableState":{"afterWriteTickInfo":null,"allBuffers":true,"allNoop":true,"autoDestroy":true,"bufferProcessing":false,"buffered":[],"bufferedIndex":0,"closeEmitted":false,"closed":false,"constructed":true,"corked":0,"decodeStrings":false,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"ended":false,"ending":false,"errorEmitted":false,"errored":null,"finalCalled":false,"finished":false,"highWaterMark":16384,"length":0,"needDrain":false,"objectMode":false,"pendingcb":0,"prefinished":false,"sync":true,"writecb":null,"writelen":0,"writing":false},"allowHalfOpen":true,"connecting":false,"parser":{"_consumed":true,"_headers":[],"_url":"","incoming":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/restaurant","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/restaurant","path":"/api/restaurant","pathname":"/api/restaurant","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":"[Circular]","complete":false,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/restaurant","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","11767c0e-8f28-476e-976e-fba76a99c7ee","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":"[Circular]","socket":"[Circular]","statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/restaurant"},"maxHeaderPairs":2000,"outgoing":null,"socket":"[Circular]"},"server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0}},"useChunkedEncodingByDefault":true,"writable":true},"socket":{"_events":{"close":[null,null],"end":[null,null]},"_eventsCount":8,"_hadError":false,"_host":null,"_httpMessage":{"_closed":false,"_contentLength":null,"_defaultKeepAlive":true,"_events":{},"_eventsCount":1,"_expect_continue":false,"_hasBody":true,"_header":null,"_headerSent":false,"_keepAliveTimeout":5000,"_last":false,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_sent100":false,"_trailer":"","chunkedEncoding":false,"destroyed":false,"finished":false,"locals":{},"maxRequestsOnConnectionReached":false,"outputData":[],"outputSize":0,"req":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/restaurant","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/restaurant","path":"/api/restaurant","pathname":"/api/restaurant","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":"[Circular]","complete":false,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/restaurant","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","11767c0e-8f28-476e-976e-fba76a99c7ee","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":"[Circular]","socket":"[Circular]","statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/restaurant"},"sendDate":true,"shouldKeepAlive":true,"socket":"[Circular]","useChunkedEncodingByDefault":true,"writable":true},"_parent":null,"_paused":false,"_pendingData":null,"_pendingEncoding":"","_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":true,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":true,"objectMode":false,"pipes":[],"readableListening":false,"reading":true,"readingMore":false,"resumeScheduled":false,"sync":false},"_server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0},"_sockname":null,"_writableState":{"afterWriteTickInfo":null,"allBuffers":true,"allNoop":true,"autoDestroy":true,"bufferProcessing":false,"buffered":[],"bufferedIndex":0,"closeEmitted":false,"closed":false,"constructed":true,"corked":0,"decodeStrings":false,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"ended":false,"ending":false,"errorEmitted":false,"errored":null,"finalCalled":false,"finished":false,"highWaterMark":16384,"length":0,"needDrain":false,"objectMode":false,"pendingcb":0,"prefinished":false,"sync":true,"writecb":null,"writelen":0,"writing":false},"allowHalfOpen":true,"connecting":false,"parser":{"_consumed":true,"_headers":[],"_url":"","incoming":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/restaurant","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/restaurant","path":"/api/restaurant","pathname":"/api/restaurant","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":"[Circular]","complete":false,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/restaurant","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","11767c0e-8f28-476e-976e-fba76a99c7ee","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":{"_closed":false,"_contentLength":null,"_defaultKeepAlive":true,"_events":{},"_eventsCount":1,"_expect_continue":false,"_hasBody":true,"_header":null,"_headerSent":false,"_keepAliveTimeout":5000,"_last":false,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_sent100":false,"_trailer":"","chunkedEncoding":false,"destroyed":false,"finished":false,"locals":{},"maxRequestsOnConnectionReached":false,"outputData":[],"outputSize":0,"req":"[Circular]","sendDate":true,"shouldKeepAlive":true,"socket":"[Circular]","useChunkedEncodingByDefault":true,"writable":true},"socket":"[Circular]","statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/restaurant"},"maxHeaderPairs":2000,"outgoing":null,"socket":"[Circular]"},"server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0}},"statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/restaurant"}
{"level":"info","message":"db connected"}
{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":{"_events":{"close":[null,null],"end":[null,null]},"_eventsCount":8,"_hadError":false,"_host":null,"_httpMessage":{"_closed":false,"_contentLength":null,"_defaultKeepAlive":true,"_events":{},"_eventsCount":1,"_expect_continue":false,"_hasBody":true,"_header":null,"_headerSent":false,"_keepAliveTimeout":5000,"_last":false,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_sent100":false,"_trailer":"","chunkedEncoding":false,"destroyed":false,"finished":false,"locals":{},"maxRequestsOnConnectionReached":false,"outputData":[],"outputSize":0,"req":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":"[Circular]","complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","13da03c5-ba01-4a51-ae35-1d74c3ed3cd7","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":"[Circular]","socket":"[Circular]","statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"},"sendDate":true,"shouldKeepAlive":true,"socket":"[Circular]","useChunkedEncodingByDefault":true,"writable":true},"_parent":null,"_paused":false,"_pendingData":null,"_pendingEncoding":"","_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":true,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":true,"objectMode":false,"pipes":[],"readableListening":false,"reading":true,"readingMore":false,"resumeScheduled":false,"sync":false},"_server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0},"_sockname":null,"_writableState":{"afterWriteTickInfo":null,"allBuffers":true,"allNoop":true,"autoDestroy":true,"bufferProcessing":false,"buffered":[],"bufferedIndex":0,"closeEmitted":false,"closed":false,"constructed":true,"corked":0,"decodeStrings":false,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"ended":false,"ending":false,"errorEmitted":false,"errored":null,"finalCalled":false,"finished":false,"highWaterMark":16384,"length":0,"needDrain":false,"objectMode":false,"pendingcb":0,"prefinished":false,"sync":true,"writecb":null,"writelen":0,"writing":false},"allowHalfOpen":true,"connecting":false,"parser":{"_consumed":true,"_headers":[],"_url":"","incoming":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":"[Circular]","complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","13da03c5-ba01-4a51-ae35-1d74c3ed3cd7","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":{"_closed":false,"_contentLength":null,"_defaultKeepAlive":true,"_events":{},"_eventsCount":1,"_expect_continue":false,"_hasBody":true,"_header":null,"_headerSent":false,"_keepAliveTimeout":5000,"_last":false,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_sent100":false,"_trailer":"","chunkedEncoding":false,"destroyed":false,"finished":false,"locals":{},"maxRequestsOnConnectionReached":false,"outputData":[],"outputSize":0,"req":"[Circular]","sendDate":true,"shouldKeepAlive":true,"socket":"[Circular]","useChunkedEncodingByDefault":true,"writable":true},"socket":"[Circular]","statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"},"maxHeaderPairs":2000,"outgoing":null,"socket":"[Circular]"},"server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0}},"complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"level":"error","method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","13da03c5-ba01-4a51-ae35-1d74c3ed3cd7","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":{"_closed":false,"_contentLength":null,"_defaultKeepAlive":true,"_events":{},"_eventsCount":1,"_expect_continue":false,"_hasBody":true,"_header":null,"_headerSent":false,"_keepAliveTimeout":5000,"_last":false,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_sent100":false,"_trailer":"","chunkedEncoding":false,"destroyed":false,"finished":false,"locals":{},"maxRequestsOnConnectionReached":false,"outputData":[],"outputSize":0,"req":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":{"_events":{"close":[null,null],"end":[null,null]},"_eventsCount":8,"_hadError":false,"_host":null,"_httpMessage":"[Circular]","_parent":null,"_paused":false,"_pendingData":null,"_pendingEncoding":"","_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":true,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":true,"objectMode":false,"pipes":[],"readableListening":false,"reading":true,"readingMore":false,"resumeScheduled":false,"sync":false},"_server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0},"_sockname":null,"_writableState":{"afterWriteTickInfo":null,"allBuffers":true,"allNoop":true,"autoDestroy":true,"bufferProcessing":false,"buffered":[],"bufferedIndex":0,"closeEmitted":false,"closed":false,"constructed":true,"corked":0,"decodeStrings":false,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"ended":false,"ending":false,"errorEmitted":false,"errored":null,"finalCalled":false,"finished":false,"highWaterMark":16384,"length":0,"needDrain":false,"objectMode":false,"pendingcb":0,"prefinished":false,"sync":true,"writecb":null,"writelen":0,"writing":false},"allowHalfOpen":true,"connecting":false,"parser":{"_consumed":true,"_headers":[],"_url":"","incoming":"[Circular]","maxHeaderPairs":2000,"outgoing":null,"socket":"[Circular]"},"server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0}},"complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","13da03c5-ba01-4a51-ae35-1d74c3ed3cd7","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":"[Circular]","socket":{"_events":{"close":[null,null],"end":[null,null]},"_eventsCount":8,"_hadError":false,"_host":null,"_httpMessage":"[Circular]","_parent":null,"_paused":false,"_pendingData":null,"_pendingEncoding":"","_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":true,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":true,"objectMode":false,"pipes":[],"readableListening":false,"reading":true,"readingMore":false,"resumeScheduled":false,"sync":false},"_server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0},"_sockname":null,"_writableState":{"afterWriteTickInfo":null,"allBuffers":true,"allNoop":true,"autoDestroy":true,"bufferProcessing":false,"buffered":[],"bufferedIndex":0,"closeEmitted":false,"closed":false,"constructed":true,"corked":0,"decodeStrings":false,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"ended":false,"ending":false,"errorEmitted":false,"errored":null,"finalCalled":false,"finished":false,"highWaterMark":16384,"length":0,"needDrain":false,"objectMode":false,"pendingcb":0,"prefinished":false,"sync":true,"writecb":null,"writelen":0,"writing":false},"allowHalfOpen":true,"connecting":false,"parser":{"_consumed":true,"_headers":[],"_url":"","incoming":"[Circular]","maxHeaderPairs":2000,"outgoing":null,"socket":"[Circular]"},"server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0}},"statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"},"sendDate":true,"shouldKeepAlive":true,"socket":{"_events":{"close":[null,null],"end":[null,null]},"_eventsCount":8,"_hadError":false,"_host":null,"_httpMessage":"[Circular]","_parent":null,"_paused":false,"_pendingData":null,"_pendingEncoding":"","_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":true,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":true,"objectMode":false,"pipes":[],"readableListening":false,"reading":true,"readingMore":false,"resumeScheduled":false,"sync":false},"_server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0},"_sockname":null,"_writableState":{"afterWriteTickInfo":null,"allBuffers":true,"allNoop":true,"autoDestroy":true,"bufferProcessing":false,"buffered":[],"bufferedIndex":0,"closeEmitted":false,"closed":false,"constructed":true,"corked":0,"decodeStrings":false,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"ended":false,"ending":false,"errorEmitted":false,"errored":null,"finalCalled":false,"finished":false,"highWaterMark":16384,"length":0,"needDrain":false,"objectMode":false,"pendingcb":0,"prefinished":false,"sync":true,"writecb":null,"writelen":0,"writing":false},"allowHalfOpen":true,"connecting":false,"parser":{"_consumed":true,"_headers":[],"_url":"","incoming":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":"[Circular]","complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","13da03c5-ba01-4a51-ae35-1d74c3ed3cd7","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":"[Circular]","socket":"[Circular]","statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"},"maxHeaderPairs":2000,"outgoing":null,"socket":"[Circular]"},"server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0}},"useChunkedEncodingByDefault":true,"writable":true},"socket":{"_events":{"close":[null,null],"end":[null,null]},"_eventsCount":8,"_hadError":false,"_host":null,"_httpMessage":{"_closed":false,"_contentLength":null,"_defaultKeepAlive":true,"_events":{},"_eventsCount":1,"_expect_continue":false,"_hasBody":true,"_header":null,"_headerSent":false,"_keepAliveTimeout":5000,"_last":false,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_sent100":false,"_trailer":"","chunkedEncoding":false,"destroyed":false,"finished":false,"locals":{},"maxRequestsOnConnectionReached":false,"outputData":[],"outputSize":0,"req":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":"[Circular]","complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","13da03c5-ba01-4a51-ae35-1d74c3ed3cd7","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":"[Circular]","socket":"[Circular]","statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"},"sendDate":true,"shouldKeepAlive":true,"socket":"[Circular]","useChunkedEncodingByDefault":true,"writable":true},"_parent":null,"_paused":false,"_pendingData":null,"_pendingEncoding":"","_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":true,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":true,"objectMode":false,"pipes":[],"readableListening":false,"reading":true,"readingMore":false,"resumeScheduled":false,"sync":false},"_server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0},"_sockname":null,"_writableState":{"afterWriteTickInfo":null,"allBuffers":true,"allNoop":true,"autoDestroy":true,"bufferProcessing":false,"buffered":[],"bufferedIndex":0,"closeEmitted":false,"closed":false,"constructed":true,"corked":0,"decodeStrings":false,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"ended":false,"ending":false,"errorEmitted":false,"errored":null,"finalCalled":false,"finished":false,"highWaterMark":16384,"length":0,"needDrain":false,"objectMode":false,"pendingcb":0,"prefinished":false,"sync":true,"writecb":null,"writelen":0,"writing":false},"allowHalfOpen":true,"connecting":false,"parser":{"_consumed":true,"_headers":[],"_url":"","incoming":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":"[Circular]","complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","13da03c5-ba01-4a51-ae35-1d74c3ed3cd7","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":{"_closed":false,"_contentLength":null,"_defaultKeepAlive":true,"_events":{},"_eventsCount":1,"_expect_continue":false,"_hasBody":true,"_header":null,"_headerSent":false,"_keepAliveTimeout":5000,"_last":false,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_sent100":false,"_trailer":"","chunkedEncoding":false,"destroyed":false,"finished":false,"locals":{},"maxRequestsOnConnectionReached":false,"outputData":[],"outputSize":0,"req":"[Circular]","sendDate":true,"shouldKeepAlive":true,"socket":"[Circular]","useChunkedEncodingByDefault":true,"writable":true},"socket":"[Circular]","statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"},"maxHeaderPairs":2000,"outgoing":null,"socket":"[Circular]"},"server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0}},"statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"}
{"level":"info","message":"db connected"}
{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":{"_events":{"close":[null,null],"end":[null,null]},"_eventsCount":8,"_hadError":false,"_host":null,"_httpMessage":{"_closed":false,"_contentLength":null,"_defaultKeepAlive":true,"_events":{},"_eventsCount":1,"_expect_continue":false,"_hasBody":true,"_header":null,"_headerSent":false,"_keepAliveTimeout":5000,"_last":false,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_sent100":false,"_trailer":"","chunkedEncoding":false,"destroyed":false,"finished":false,"locals":{},"maxRequestsOnConnectionReached":false,"outputData":[],"outputSize":0,"req":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":"[Circular]","complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","bfb17b29-a825-4165-afb1-877b7e2d8f70","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":"[Circular]","socket":"[Circular]","statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"},"sendDate":true,"shouldKeepAlive":true,"socket":"[Circular]","useChunkedEncodingByDefault":true,"writable":true},"_parent":null,"_paused":false,"_pendingData":null,"_pendingEncoding":"","_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":true,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":true,"objectMode":false,"pipes":[],"readableListening":false,"reading":true,"readingMore":false,"resumeScheduled":false,"sync":false},"_server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0},"_sockname":null,"_writableState":{"afterWriteTickInfo":null,"allBuffers":true,"allNoop":true,"autoDestroy":true,"bufferProcessing":false,"buffered":[],"bufferedIndex":0,"closeEmitted":false,"closed":false,"constructed":true,"corked":0,"decodeStrings":false,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"ended":false,"ending":false,"errorEmitted":false,"errored":null,"finalCalled":false,"finished":false,"highWaterMark":16384,"length":0,"needDrain":false,"objectMode":false,"pendingcb":0,"prefinished":false,"sync":true,"writecb":null,"writelen":0,"writing":false},"allowHalfOpen":true,"connecting":false,"parser":{"_consumed":true,"_headers":[],"_url":"","incoming":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":"[Circular]","complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","bfb17b29-a825-4165-afb1-877b7e2d8f70","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":{"_closed":false,"_contentLength":null,"_defaultKeepAlive":true,"_events":{},"_eventsCount":1,"_expect_continue":false,"_hasBody":true,"_header":null,"_headerSent":false,"_keepAliveTimeout":5000,"_last":false,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_sent100":false,"_trailer":"","chunkedEncoding":false,"destroyed":false,"finished":false,"locals":{},"maxRequestsOnConnectionReached":false,"outputData":[],"outputSize":0,"req":"[Circular]","sendDate":true,"shouldKeepAlive":true,"socket":"[Circular]","useChunkedEncodingByDefault":true,"writable":true},"socket":"[Circular]","statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"},"maxHeaderPairs":2000,"outgoing":null,"socket":"[Circular]"},"server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0}},"complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"level":"error","method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","bfb17b29-a825-4165-afb1-877b7e2d8f70","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":{"_closed":false,"_contentLength":null,"_defaultKeepAlive":true,"_events":{},"_eventsCount":1,"_expect_continue":false,"_hasBody":true,"_header":null,"_headerSent":false,"_keepAliveTimeout":5000,"_last":false,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_sent100":false,"_trailer":"","chunkedEncoding":false,"destroyed":false,"finished":false,"locals":{},"maxRequestsOnConnectionReached":false,"outputData":[],"outputSize":0,"req":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":{"_events":{"close":[null,null],"end":[null,null]},"_eventsCount":8,"_hadError":false,"_host":null,"_httpMessage":"[Circular]","_parent":null,"_paused":false,"_pendingData":null,"_pendingEncoding":"","_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":true,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":true,"objectMode":false,"pipes":[],"readableListening":false,"reading":true,"readingMore":false,"resumeScheduled":false,"sync":false},"_server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0},"_sockname":null,"_writableState":{"afterWriteTickInfo":null,"allBuffers":true,"allNoop":true,"autoDestroy":true,"bufferProcessing":false,"buffered":[],"bufferedIndex":0,"closeEmitted":false,"closed":false,"constructed":true,"corked":0,"decodeStrings":false,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"ended":false,"ending":false,"errorEmitted":false,"errored":null,"finalCalled":false,"finished":false,"highWaterMark":16384,"length":0,"needDrain":false,"objectMode":false,"pendingcb":0,"prefinished":false,"sync":true,"writecb":null,"writelen":0,"writing":false},"allowHalfOpen":true,"connecting":false,"parser":{"_consumed":true,"_headers":[],"_url":"","incoming":"[Circular]","maxHeaderPairs":2000,"outgoing":null,"socket":"[Circular]"},"server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0}},"complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","bfb17b29-a825-4165-afb1-877b7e2d8f70","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":"[Circular]","socket":{"_events":{"close":[null,null],"end":[null,null]},"_eventsCount":8,"_hadError":false,"_host":null,"_httpMessage":"[Circular]","_parent":null,"_paused":false,"_pendingData":null,"_pendingEncoding":"","_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":true,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":true,"objectMode":false,"pipes":[],"readableListening":false,"reading":true,"readingMore":false,"resumeScheduled":false,"sync":false},"_server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0},"_sockname":null,"_writableState":{"afterWriteTickInfo":null,"allBuffers":true,"allNoop":true,"autoDestroy":true,"bufferProcessing":false,"buffered":[],"bufferedIndex":0,"closeEmitted":false,"closed":false,"constructed":true,"corked":0,"decodeStrings":false,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"ended":false,"ending":false,"errorEmitted":false,"errored":null,"finalCalled":false,"finished":false,"highWaterMark":16384,"length":0,"needDrain":false,"objectMode":false,"pendingcb":0,"prefinished":false,"sync":true,"writecb":null,"writelen":0,"writing":false},"allowHalfOpen":true,"connecting":false,"parser":{"_consumed":true,"_headers":[],"_url":"","incoming":"[Circular]","maxHeaderPairs":2000,"outgoing":null,"socket":"[Circular]"},"server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0}},"statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"},"sendDate":true,"shouldKeepAlive":true,"socket":{"_events":{"close":[null,null],"end":[null,null]},"_eventsCount":8,"_hadError":false,"_host":null,"_httpMessage":"[Circular]","_parent":null,"_paused":false,"_pendingData":null,"_pendingEncoding":"","_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":true,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":true,"objectMode":false,"pipes":[],"readableListening":false,"reading":true,"readingMore":false,"resumeScheduled":false,"sync":false},"_server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0},"_sockname":null,"_writableState":{"afterWriteTickInfo":null,"allBuffers":true,"allNoop":true,"autoDestroy":true,"bufferProcessing":false,"buffered":[],"bufferedIndex":0,"closeEmitted":false,"closed":false,"constructed":true,"corked":0,"decodeStrings":false,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"ended":false,"ending":false,"errorEmitted":false,"errored":null,"finalCalled":false,"finished":false,"highWaterMark":16384,"length":0,"needDrain":false,"objectMode":false,"pendingcb":0,"prefinished":false,"sync":true,"writecb":null,"writelen":0,"writing":false},"allowHalfOpen":true,"connecting":false,"parser":{"_consumed":true,"_headers":[],"_url":"","incoming":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":"[Circular]","complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","bfb17b29-a825-4165-afb1-877b7e2d8f70","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":"[Circular]","socket":"[Circular]","statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"},"maxHeaderPairs":2000,"outgoing":null,"socket":"[Circular]"},"server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0}},"useChunkedEncodingByDefault":true,"writable":true},"socket":{"_events":{"close":[null,null],"end":[null,null]},"_eventsCount":8,"_hadError":false,"_host":null,"_httpMessage":{"_closed":false,"_contentLength":null,"_defaultKeepAlive":true,"_events":{},"_eventsCount":1,"_expect_continue":false,"_hasBody":true,"_header":null,"_headerSent":false,"_keepAliveTimeout":5000,"_last":false,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_sent100":false,"_trailer":"","chunkedEncoding":false,"destroyed":false,"finished":false,"locals":{},"maxRequestsOnConnectionReached":false,"outputData":[],"outputSize":0,"req":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":"[Circular]","complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","bfb17b29-a825-4165-afb1-877b7e2d8f70","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":"[Circular]","socket":"[Circular]","statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"},"sendDate":true,"shouldKeepAlive":true,"socket":"[Circular]","useChunkedEncodingByDefault":true,"writable":true},"_parent":null,"_paused":false,"_pendingData":null,"_pendingEncoding":"","_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":true,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":true,"objectMode":false,"pipes":[],"readableListening":false,"reading":true,"readingMore":false,"resumeScheduled":false,"sync":false},"_server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0},"_sockname":null,"_writableState":{"afterWriteTickInfo":null,"allBuffers":true,"allNoop":true,"autoDestroy":true,"bufferProcessing":false,"buffered":[],"bufferedIndex":0,"closeEmitted":false,"closed":false,"constructed":true,"corked":0,"decodeStrings":false,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"ended":false,"ending":false,"errorEmitted":false,"errored":null,"finalCalled":false,"finished":false,"highWaterMark":16384,"length":0,"needDrain":false,"objectMode":false,"pendingcb":0,"prefinished":false,"sync":true,"writecb":null,"writelen":0,"writing":false},"allowHalfOpen":true,"connecting":false,"parser":{"_consumed":true,"_headers":[],"_url":"","incoming":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":"[Circular]","complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","bfb17b29-a825-4165-afb1-877b7e2d8f70","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":{"_closed":false,"_contentLength":null,"_defaultKeepAlive":true,"_events":{},"_eventsCount":1,"_expect_continue":false,"_hasBody":true,"_header":null,"_headerSent":false,"_keepAliveTimeout":5000,"_last":false,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_sent100":false,"_trailer":"","chunkedEncoding":false,"destroyed":false,"finished":false,"locals":{},"maxRequestsOnConnectionReached":false,"outputData":[],"outputSize":0,"req":"[Circular]","sendDate":true,"shouldKeepAlive":true,"socket":"[Circular]","useChunkedEncodingByDefault":true,"writable":true},"socket":"[Circular]","statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"},"maxHeaderPairs":2000,"outgoing":null,"socket":"[Circular]"},"server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0}},"statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"}
{"level":"info","message":"db connected"}
{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":{"_events":{"close":[null,null],"end":[null,null]},"_eventsCount":8,"_hadError":false,"_host":null,"_httpMessage":{"_closed":false,"_contentLength":null,"_defaultKeepAlive":true,"_events":{},"_eventsCount":1,"_expect_continue":false,"_hasBody":true,"_header":null,"_headerSent":false,"_keepAliveTimeout":5000,"_last":false,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_sent100":false,"_trailer":"","chunkedEncoding":false,"destroyed":false,"finished":false,"locals":{},"maxRequestsOnConnectionReached":false,"outputData":[],"outputSize":0,"req":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":"[Circular]","complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","a84a5665-2c0e-4f90-850e-7b8a5aea4d2d","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":"[Circular]","socket":"[Circular]","statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"},"sendDate":true,"shouldKeepAlive":true,"socket":"[Circular]","useChunkedEncodingByDefault":true,"writable":true},"_parent":null,"_paused":false,"_pendingData":null,"_pendingEncoding":"","_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":true,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":true,"objectMode":false,"pipes":[],"readableListening":false,"reading":true,"readingMore":false,"resumeScheduled":false,"sync":false},"_server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0},"_sockname":null,"_writableState":{"afterWriteTickInfo":null,"allBuffers":true,"allNoop":true,"autoDestroy":true,"bufferProcessing":false,"buffered":[],"bufferedIndex":0,"closeEmitted":false,"closed":false,"constructed":true,"corked":0,"decodeStrings":false,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"ended":false,"ending":false,"errorEmitted":false,"errored":null,"finalCalled":false,"finished":false,"highWaterMark":16384,"length":0,"needDrain":false,"objectMode":false,"pendingcb":0,"prefinished":false,"sync":true,"writecb":null,"writelen":0,"writing":false},"allowHalfOpen":true,"connecting":false,"parser":{"_consumed":true,"_headers":[],"_url":"","incoming":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":"[Circular]","complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","a84a5665-2c0e-4f90-850e-7b8a5aea4d2d","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":{"_closed":false,"_contentLength":null,"_defaultKeepAlive":true,"_events":{},"_eventsCount":1,"_expect_continue":false,"_hasBody":true,"_header":null,"_headerSent":false,"_keepAliveTimeout":5000,"_last":false,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_sent100":false,"_trailer":"","chunkedEncoding":false,"destroyed":false,"finished":false,"locals":{},"maxRequestsOnConnectionReached":false,"outputData":[],"outputSize":0,"req":"[Circular]","sendDate":true,"shouldKeepAlive":true,"socket":"[Circular]","useChunkedEncodingByDefault":true,"writable":true},"socket":"[Circular]","statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"},"maxHeaderPairs":2000,"outgoing":null,"socket":"[Circular]"},"server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0}},"complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"level":"error","method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","a84a5665-2c0e-4f90-850e-7b8a5aea4d2d","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":{"_closed":false,"_contentLength":null,"_defaultKeepAlive":true,"_events":{},"_eventsCount":1,"_expect_continue":false,"_hasBody":true,"_header":null,"_headerSent":false,"_keepAliveTimeout":5000,"_last":false,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_sent100":false,"_trailer":"","chunkedEncoding":false,"destroyed":false,"finished":false,"locals":{},"maxRequestsOnConnectionReached":false,"outputData":[],"outputSize":0,"req":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":{"_events":{"close":[null,null],"end":[null,null]},"_eventsCount":8,"_hadError":false,"_host":null,"_httpMessage":"[Circular]","_parent":null,"_paused":false,"_pendingData":null,"_pendingEncoding":"","_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":true,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":true,"objectMode":false,"pipes":[],"readableListening":false,"reading":true,"readingMore":false,"resumeScheduled":false,"sync":false},"_server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0},"_sockname":null,"_writableState":{"afterWriteTickInfo":null,"allBuffers":true,"allNoop":true,"autoDestroy":true,"bufferProcessing":false,"buffered":[],"bufferedIndex":0,"closeEmitted":false,"closed":false,"constructed":true,"corked":0,"decodeStrings":false,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"ended":false,"ending":false,"errorEmitted":false,"errored":null,"finalCalled":false,"finished":false,"highWaterMark":16384,"length":0,"needDrain":false,"objectMode":false,"pendingcb":0,"prefinished":false,"sync":true,"writecb":null,"writelen":0,"writing":false},"allowHalfOpen":true,"connecting":false,"parser":{"_consumed":true,"_headers":[],"_url":"","incoming":"[Circular]","maxHeaderPairs":2000,"outgoing":null,"socket":"[Circular]"},"server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0}},"complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","a84a5665-2c0e-4f90-850e-7b8a5aea4d2d","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":"[Circular]","socket":{"_events":{"close":[null,null],"end":[null,null]},"_eventsCount":8,"_hadError":false,"_host":null,"_httpMessage":"[Circular]","_parent":null,"_paused":false,"_pendingData":null,"_pendingEncoding":"","_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":true,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":true,"objectMode":false,"pipes":[],"readableListening":false,"reading":true,"readingMore":false,"resumeScheduled":false,"sync":false},"_server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0},"_sockname":null,"_writableState":{"afterWriteTickInfo":null,"allBuffers":true,"allNoop":true,"autoDestroy":true,"bufferProcessing":false,"buffered":[],"bufferedIndex":0,"closeEmitted":false,"closed":false,"constructed":true,"corked":0,"decodeStrings":false,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"ended":false,"ending":false,"errorEmitted":false,"errored":null,"finalCalled":false,"finished":false,"highWaterMark":16384,"length":0,"needDrain":false,"objectMode":false,"pendingcb":0,"prefinished":false,"sync":true,"writecb":null,"writelen":0,"writing":false},"allowHalfOpen":true,"connecting":false,"parser":{"_consumed":true,"_headers":[],"_url":"","incoming":"[Circular]","maxHeaderPairs":2000,"outgoing":null,"socket":"[Circular]"},"server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0}},"statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"},"sendDate":true,"shouldKeepAlive":true,"socket":{"_events":{"close":[null,null],"end":[null,null]},"_eventsCount":8,"_hadError":false,"_host":null,"_httpMessage":"[Circular]","_parent":null,"_paused":false,"_pendingData":null,"_pendingEncoding":"","_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":true,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":true,"objectMode":false,"pipes":[],"readableListening":false,"reading":true,"readingMore":false,"resumeScheduled":false,"sync":false},"_server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0},"_sockname":null,"_writableState":{"afterWriteTickInfo":null,"allBuffers":true,"allNoop":true,"autoDestroy":true,"bufferProcessing":false,"buffered":[],"bufferedIndex":0,"closeEmitted":false,"closed":false,"constructed":true,"corked":0,"decodeStrings":false,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"ended":false,"ending":false,"errorEmitted":false,"errored":null,"finalCalled":false,"finished":false,"highWaterMark":16384,"length":0,"needDrain":false,"objectMode":false,"pendingcb":0,"prefinished":false,"sync":true,"writecb":null,"writelen":0,"writing":false},"allowHalfOpen":true,"connecting":false,"parser":{"_consumed":true,"_headers":[],"_url":"","incoming":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":"[Circular]","complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","a84a5665-2c0e-4f90-850e-7b8a5aea4d2d","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":"[Circular]","socket":"[Circular]","statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"},"maxHeaderPairs":2000,"outgoing":null,"socket":"[Circular]"},"server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0}},"useChunkedEncodingByDefault":true,"writable":true},"socket":{"_events":{"close":[null,null],"end":[null,null]},"_eventsCount":8,"_hadError":false,"_host":null,"_httpMessage":{"_closed":false,"_contentLength":null,"_defaultKeepAlive":true,"_events":{},"_eventsCount":1,"_expect_continue":false,"_hasBody":true,"_header":null,"_headerSent":false,"_keepAliveTimeout":5000,"_last":false,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_sent100":false,"_trailer":"","chunkedEncoding":false,"destroyed":false,"finished":false,"locals":{},"maxRequestsOnConnectionReached":false,"outputData":[],"outputSize":0,"req":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":"[Circular]","complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","a84a5665-2c0e-4f90-850e-7b8a5aea4d2d","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":"[Circular]","socket":"[Circular]","statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"},"sendDate":true,"shouldKeepAlive":true,"socket":"[Circular]","useChunkedEncodingByDefault":true,"writable":true},"_parent":null,"_paused":false,"_pendingData":null,"_pendingEncoding":"","_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":false,"errorEmitted":false,"errored":null,"flowing":true,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":true,"objectMode":false,"pipes":[],"readableListening":false,"reading":true,"readingMore":false,"resumeScheduled":false,"sync":false},"_server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0},"_sockname":null,"_writableState":{"afterWriteTickInfo":null,"allBuffers":true,"allNoop":true,"autoDestroy":true,"bufferProcessing":false,"buffered":[],"bufferedIndex":0,"closeEmitted":false,"closed":false,"constructed":true,"corked":0,"decodeStrings":false,"defaultEncoding":"utf8","destroyed":false,"emitClose":false,"ended":false,"ending":false,"errorEmitted":false,"errored":null,"finalCalled":false,"finished":false,"highWaterMark":16384,"length":0,"needDrain":false,"objectMode":false,"pendingcb":0,"prefinished":false,"sync":true,"writecb":null,"writelen":0,"writing":false},"allowHalfOpen":true,"connecting":false,"parser":{"_consumed":true,"_headers":[],"_url":"","incoming":{"_consuming":false,"_dumped":false,"_events":{},"_eventsCount":1,"_parsedUrl":{"_raw":"/api/food","auth":null,"hash":null,"host":null,"hostname":null,"href":"/api/food","path":"/api/food","pathname":"/api/food","port":null,"protocol":null,"query":null,"search":null,"slashes":null},"_readableState":{"autoDestroy":true,"awaitDrainWriters":null,"buffer":{"head":null,"length":0,"tail":null},"closeEmitted":false,"closed":false,"constructed":true,"dataEmitted":false,"decoder":null,"defaultEncoding":"utf8","destroyed":false,"emitClose":true,"emittedReadable":false,"encoding":null,"endEmitted":false,"ended":true,"errorEmitted":false,"errored":null,"flowing":null,"highWaterMark":16384,"length":0,"multiAwaitDrain":false,"needReadable":false,"objectMode":false,"pipes":[],"readableListening":false,"reading":false,"readingMore":true,"resumeScheduled":false,"sync":true},"aborted":false,"baseUrl":"","body":{},"client":"[Circular]","complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":"DELETE","originalUrl":"/api/food","params":{},"query":{},"rawHeaders":["User-Agent","PostmanRuntime/7.31.3","Accept","*/*","Postman-Token","a84a5665-2c0e-4f90-850e-7b8a5aea4d2d","Host","localhost:8000","Accept-Encoding","gzip, deflate, br","Connection","keep-alive"],"rawTrailers":[],"res":{"_closed":false,"_contentLength":null,"_defaultKeepAlive":true,"_events":{},"_eventsCount":1,"_expect_continue":false,"_hasBody":true,"_header":null,"_headerSent":false,"_keepAliveTimeout":5000,"_last":false,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_sent100":false,"_trailer":"","chunkedEncoding":false,"destroyed":false,"finished":false,"locals":{},"maxRequestsOnConnectionReached":false,"outputData":[],"outputSize":0,"req":"[Circular]","sendDate":true,"shouldKeepAlive":true,"socket":"[Circular]","useChunkedEncodingByDefault":true,"writable":true},"socket":"[Circular]","statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"},"maxHeaderPairs":2000,"outgoing":null,"socket":"[Circular]"},"server":{"_connectionKey":"6::::8000","_connections":1,"_events":{},"_eventsCount":2,"_handle":{"reading":false},"_unref":false,"_usingWorkers":false,"_workers":[],"allowHalfOpen":true,"headersTimeout":60000,"httpAllowHalfOpen":false,"keepAlive":false,"keepAliveInitialDelay":0,"keepAliveTimeout":5000,"maxHeadersCount":null,"maxRequestsPerSocket":0,"noDelay":false,"pauseOnConnect":false,"requestTimeout":0,"timeout":0}},"statusCode":null,"statusMessage":null,"upgrade":false,"url":"/api/food"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error"}
{"level":"info","message":"db connected"}
{"level":"error"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Cannot read properties of null (reading 'remove') Cannot read properties of null (reading 'remove')","stack":"TypeError: Cannot read properties of null (reading 'remove')\n    at E:\\food\\app\\controllers\\food.ts:25:35\n    at step (E:\\food\\app\\controllers\\food.ts:33:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:14:53)\n    at fulfilled (E:\\food\\app\\controllers\\food.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"The #update method is not available on EmbeddedDocuments The #update method is not available on EmbeddedDocuments","stack":"Error: The #update method is not available on EmbeddedDocuments\n    at EmbeddedDocument.update (E:\\food\\node_modules\\mongoose\\lib\\types\\embedded.js:251:9)\n    at E:\\food\\app\\controllers\\food.ts:34:36\n    at step (E:\\food\\app\\controllers\\food.ts:33:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:14:53)\n    at fulfilled (E:\\food\\app\\controllers\\food.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"error","message":"The #update method is not available on EmbeddedDocuments The #update method is not available on EmbeddedDocuments","stack":"Error: The #update method is not available on EmbeddedDocuments\n    at EmbeddedDocument.update (E:\\food\\node_modules\\mongoose\\lib\\types\\embedded.js:251:9)\n    at E:\\food\\app\\controllers\\food.ts:34:36\n    at step (E:\\food\\app\\controllers\\food.ts:33:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:14:53)\n    at fulfilled (E:\\food\\app\\controllers\\food.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Can't use $set with Array. Can't use $set with Array.","stack":"Error: Can't use $set with Array.\n    at DocumentArrayPath.SchemaArray.castForQuery (E:\\food\\node_modules\\mongoose\\lib\\schema\\array.js:495:13)\n    at DocumentArrayPath.SchemaType.castForQueryWrapper (E:\\food\\node_modules\\mongoose\\lib\\schematype.js:1558:22)\n    at cast (E:\\food\\node_modules\\mongoose\\lib\\cast.js:311:39)\n    at model.Query.Query.cast (E:\\food\\node_modules\\mongoose\\lib\\query.js:4937:12)\n    at castQuery (E:\\food\\node_modules\\mongoose\\lib\\query.js:4738:18)\n    at model.Query.Query._findAndModify (E:\\food\\node_modules\\mongoose\\lib\\query.js:3598:23)\n    at model.Query.<anonymous> (E:\\food\\node_modules\\mongoose\\lib\\query.js:3164:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (E:\\food\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at E:\\food\\node_modules\\kareem\\index.js:370:33\n    at processTicksAndRejections (node:internal/process/task_queues:78:11)"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Can't use $set with Array. Can't use $set with Array.","stack":"Error: Can't use $set with Array.\n    at DocumentArrayPath.SchemaArray.castForQuery (E:\\food\\node_modules\\mongoose\\lib\\schema\\array.js:495:13)\n    at DocumentArrayPath.SchemaType.castForQueryWrapper (E:\\food\\node_modules\\mongoose\\lib\\schematype.js:1558:22)\n    at cast (E:\\food\\node_modules\\mongoose\\lib\\cast.js:311:39)\n    at model.Query.Query.cast (E:\\food\\node_modules\\mongoose\\lib\\query.js:4937:12)\n    at castQuery (E:\\food\\node_modules\\mongoose\\lib\\query.js:4738:18)\n    at model.Query.Query._findAndModify (E:\\food\\node_modules\\mongoose\\lib\\query.js:3598:23)\n    at model.Query.<anonymous> (E:\\food\\node_modules\\mongoose\\lib\\query.js:3164:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (E:\\food\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at E:\\food\\node_modules\\kareem\\index.js:370:33\n    at processTicksAndRejections (node:internal/process/task_queues:78:11)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"_message":"restaurant validation failed","errors":{"menu.0.description":{"kind":"required","message":"Path `description` is required.","name":"ValidatorError","path":"description","properties":{"message":"Path `description` is required.","path":"description","type":"required"}},"menu.0.price":{"kind":"required","message":"Path `price` is required.","name":"ValidatorError","path":"price","properties":{"message":"Path `price` is required.","path":"price","type":"required"}},"menu.1.description":{"kind":"required","message":"Path `description` is required.","name":"ValidatorError","path":"description","properties":{"message":"Path `description` is required.","path":"description","type":"required"}},"menu.1.price":{"kind":"required","message":"Path `price` is required.","name":"ValidatorError","path":"price","properties":{"message":"Path `price` is required.","path":"price","type":"required"}}},"level":"error","message":"restaurant validation failed: menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.1.price: Path `price` is required., menu.1.description: Path `description` is required. restaurant validation failed: menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.1.price: Path `price` is required., menu.1.description: Path `description` is required.","stack":"ValidationError: restaurant validation failed: menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.1.price: Path `price` is required., menu.1.description: Path `description` is required.\n    at model.Document.invalidate (E:\\food\\node_modules\\mongoose\\lib\\document.js:2782:32)\n    at EmbeddedDocument.invalidate (E:\\food\\node_modules\\mongoose\\lib\\types\\embedded.js:298:29)\n    at E:\\food\\node_modules\\mongoose\\lib\\document.js:2574:17\n    at E:\\food\\node_modules\\mongoose\\lib\\schematype.js:1273:9\n    at processTicksAndRejections (node:internal/process/task_queues:78:11)"}
{"_message":"restaurant validation failed","errors":{"menu.0.description":{"kind":"required","message":"Path `description` is required.","name":"ValidatorError","path":"description","properties":{"message":"Path `description` is required.","path":"description","type":"required"}},"menu.0.price":{"kind":"required","message":"Path `price` is required.","name":"ValidatorError","path":"price","properties":{"message":"Path `price` is required.","path":"price","type":"required"}},"menu.1.description":{"kind":"required","message":"Path `description` is required.","name":"ValidatorError","path":"description","properties":{"message":"Path `description` is required.","path":"description","type":"required"}},"menu.1.price":{"kind":"required","message":"Path `price` is required.","name":"ValidatorError","path":"price","properties":{"message":"Path `price` is required.","path":"price","type":"required"}}},"level":"error","message":"restaurant validation failed: menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.1.price: Path `price` is required., menu.1.description: Path `description` is required. restaurant validation failed: menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.1.price: Path `price` is required., menu.1.description: Path `description` is required.","stack":"ValidationError: restaurant validation failed: menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.1.price: Path `price` is required., menu.1.description: Path `description` is required.\n    at model.Document.invalidate (E:\\food\\node_modules\\mongoose\\lib\\document.js:2782:32)\n    at EmbeddedDocument.invalidate (E:\\food\\node_modules\\mongoose\\lib\\types\\embedded.js:298:29)\n    at E:\\food\\node_modules\\mongoose\\lib\\document.js:2574:17\n    at E:\\food\\node_modules\\mongoose\\lib\\schematype.js:1273:9\n    at processTicksAndRejections (node:internal/process/task_queues:78:11)"}
{"_message":"restaurant validation failed","errors":{"menu.0.description":{"kind":"required","message":"Path `description` is required.","name":"ValidatorError","path":"description","properties":{"message":"Path `description` is required.","path":"description","type":"required"}},"menu.0.price":{"kind":"required","message":"Path `price` is required.","name":"ValidatorError","path":"price","properties":{"message":"Path `price` is required.","path":"price","type":"required"}},"menu.1.description":{"kind":"required","message":"Path `description` is required.","name":"ValidatorError","path":"description","properties":{"message":"Path `description` is required.","path":"description","type":"required"}},"menu.1.price":{"kind":"required","message":"Path `price` is required.","name":"ValidatorError","path":"price","properties":{"message":"Path `price` is required.","path":"price","type":"required"}}},"level":"error","message":"restaurant validation failed: menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.1.price: Path `price` is required., menu.1.description: Path `description` is required. restaurant validation failed: menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.1.price: Path `price` is required., menu.1.description: Path `description` is required.","stack":"ValidationError: restaurant validation failed: menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.1.price: Path `price` is required., menu.1.description: Path `description` is required.\n    at model.Document.invalidate (E:\\food\\node_modules\\mongoose\\lib\\document.js:2782:32)\n    at EmbeddedDocument.invalidate (E:\\food\\node_modules\\mongoose\\lib\\types\\embedded.js:298:29)\n    at E:\\food\\node_modules\\mongoose\\lib\\document.js:2574:17\n    at E:\\food\\node_modules\\mongoose\\lib\\schematype.js:1273:9\n    at processTicksAndRejections (node:internal/process/task_queues:78:11)"}
{"_message":"restaurant validation failed","errors":{"menu.0.description":{"kind":"required","message":"Path `description` is required.","name":"ValidatorError","path":"description","properties":{"message":"Path `description` is required.","path":"description","type":"required"}},"menu.0.price":{"kind":"required","message":"Path `price` is required.","name":"ValidatorError","path":"price","properties":{"message":"Path `price` is required.","path":"price","type":"required"}},"menu.1.description":{"kind":"required","message":"Path `description` is required.","name":"ValidatorError","path":"description","properties":{"message":"Path `description` is required.","path":"description","type":"required"}},"menu.1.price":{"kind":"required","message":"Path `price` is required.","name":"ValidatorError","path":"price","properties":{"message":"Path `price` is required.","path":"price","type":"required"}}},"level":"error","message":"restaurant validation failed: menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.1.price: Path `price` is required., menu.1.description: Path `description` is required. restaurant validation failed: menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.1.price: Path `price` is required., menu.1.description: Path `description` is required.","stack":"ValidationError: restaurant validation failed: menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.1.price: Path `price` is required., menu.1.description: Path `description` is required.\n    at model.Document.invalidate (E:\\food\\node_modules\\mongoose\\lib\\document.js:2782:32)\n    at EmbeddedDocument.invalidate (E:\\food\\node_modules\\mongoose\\lib\\types\\embedded.js:298:29)\n    at E:\\food\\node_modules\\mongoose\\lib\\document.js:2574:17\n    at E:\\food\\node_modules\\mongoose\\lib\\schematype.js:1273:9\n    at processTicksAndRejections (node:internal/process/task_queues:78:11)"}
{"level":"info","message":"db connected"}
{"_message":"restaurant validation failed","errors":{"menu.0.description":{"kind":"required","message":"Path `description` is required.","name":"ValidatorError","path":"description","properties":{"message":"Path `description` is required.","path":"description","type":"required"}},"menu.0.price":{"kind":"required","message":"Path `price` is required.","name":"ValidatorError","path":"price","properties":{"message":"Path `price` is required.","path":"price","type":"required"}},"menu.1.description":{"kind":"required","message":"Path `description` is required.","name":"ValidatorError","path":"description","properties":{"message":"Path `description` is required.","path":"description","type":"required"}},"menu.1.price":{"kind":"required","message":"Path `price` is required.","name":"ValidatorError","path":"price","properties":{"message":"Path `price` is required.","path":"price","type":"required"}}},"level":"error","message":"restaurant validation failed: menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.1.price: Path `price` is required., menu.1.description: Path `description` is required. restaurant validation failed: menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.1.price: Path `price` is required., menu.1.description: Path `description` is required.","stack":"ValidationError: restaurant validation failed: menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.1.price: Path `price` is required., menu.1.description: Path `description` is required.\n    at model.Document.invalidate (E:\\food\\node_modules\\mongoose\\lib\\document.js:2782:32)\n    at EmbeddedDocument.invalidate (E:\\food\\node_modules\\mongoose\\lib\\types\\embedded.js:298:29)\n    at E:\\food\\node_modules\\mongoose\\lib\\document.js:2574:17\n    at E:\\food\\node_modules\\mongoose\\lib\\schematype.js:1273:9\n    at processTicksAndRejections (node:internal/process/task_queues:78:11)"}
{"level":"info","message":"db connected"}
{"_message":"restaurant validation failed","errors":{"menu.0.description":{"kind":"required","message":"Path `description` is required.","name":"ValidatorError","path":"description","properties":{"message":"Path `description` is required.","path":"description","type":"required"}},"menu.0.price":{"kind":"required","message":"Path `price` is required.","name":"ValidatorError","path":"price","properties":{"message":"Path `price` is required.","path":"price","type":"required"}},"menu.1.description":{"kind":"required","message":"Path `description` is required.","name":"ValidatorError","path":"description","properties":{"message":"Path `description` is required.","path":"description","type":"required"}},"menu.1.price":{"kind":"required","message":"Path `price` is required.","name":"ValidatorError","path":"price","properties":{"message":"Path `price` is required.","path":"price","type":"required"}}},"level":"error","message":"restaurant validation failed: menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.1.price: Path `price` is required., menu.1.description: Path `description` is required. restaurant validation failed: menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.1.price: Path `price` is required., menu.1.description: Path `description` is required.","stack":"ValidationError: restaurant validation failed: menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.1.price: Path `price` is required., menu.1.description: Path `description` is required.\n    at model.Document.invalidate (E:\\food\\node_modules\\mongoose\\lib\\document.js:2782:32)\n    at EmbeddedDocument.invalidate (E:\\food\\node_modules\\mongoose\\lib\\types\\embedded.js:298:29)\n    at E:\\food\\node_modules\\mongoose\\lib\\document.js:2574:17\n    at E:\\food\\node_modules\\mongoose\\lib\\schematype.js:1273:9\n    at processTicksAndRejections (node:internal/process/task_queues:78:11)"}
{"level":"info","message":"db connected"}
{"_message":"restaurant validation failed","errors":{"menu.0.description":{"kind":"required","message":"Path `description` is required.","name":"ValidatorError","path":"description","properties":{"message":"Path `description` is required.","path":"description","type":"required"}},"menu.0.price":{"kind":"required","message":"Path `price` is required.","name":"ValidatorError","path":"price","properties":{"message":"Path `price` is required.","path":"price","type":"required"}},"menu.1.description":{"kind":"required","message":"Path `description` is required.","name":"ValidatorError","path":"description","properties":{"message":"Path `description` is required.","path":"description","type":"required"}},"menu.1.price":{"kind":"required","message":"Path `price` is required.","name":"ValidatorError","path":"price","properties":{"message":"Path `price` is required.","path":"price","type":"required"}}},"level":"error","message":"restaurant validation failed: menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.1.price: Path `price` is required., menu.1.description: Path `description` is required. restaurant validation failed: menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.1.price: Path `price` is required., menu.1.description: Path `description` is required.","stack":"ValidationError: restaurant validation failed: menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.1.price: Path `price` is required., menu.1.description: Path `description` is required.\n    at model.Document.invalidate (E:\\food\\node_modules\\mongoose\\lib\\document.js:2782:32)\n    at EmbeddedDocument.invalidate (E:\\food\\node_modules\\mongoose\\lib\\types\\embedded.js:298:29)\n    at E:\\food\\node_modules\\mongoose\\lib\\document.js:2574:17\n    at E:\\food\\node_modules\\mongoose\\lib\\schematype.js:1273:9\n    at processTicksAndRejections (node:internal/process/task_queues:78:11)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"_message":"restaurant validation failed","errors":{"menu.0.description":{"kind":"required","message":"Path `description` is required.","name":"ValidatorError","path":"description","properties":{"message":"Path `description` is required.","path":"description","type":"required"}},"menu.0.price":{"kind":"required","message":"Path `price` is required.","name":"ValidatorError","path":"price","properties":{"message":"Path `price` is required.","path":"price","type":"required"}},"menu.1.description":{"kind":"required","message":"Path `description` is required.","name":"ValidatorError","path":"description","properties":{"message":"Path `description` is required.","path":"description","type":"required"}},"menu.1.price":{"kind":"required","message":"Path `price` is required.","name":"ValidatorError","path":"price","properties":{"message":"Path `price` is required.","path":"price","type":"required"}}},"level":"error","message":"restaurant validation failed: menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.1.price: Path `price` is required., menu.1.description: Path `description` is required. restaurant validation failed: menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.1.price: Path `price` is required., menu.1.description: Path `description` is required.","stack":"ValidationError: restaurant validation failed: menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.1.price: Path `price` is required., menu.1.description: Path `description` is required.\n    at model.Document.invalidate (E:\\food\\node_modules\\mongoose\\lib\\document.js:2782:32)\n    at EmbeddedDocument.invalidate (E:\\food\\node_modules\\mongoose\\lib\\types\\embedded.js:298:29)\n    at E:\\food\\node_modules\\mongoose\\lib\\document.js:2574:17\n    at E:\\food\\node_modules\\mongoose\\lib\\schematype.js:1273:9\n    at processTicksAndRejections (node:internal/process/task_queues:78:11)"}
{"_message":"restaurant validation failed","errors":{"menu.1.description":{"kind":"required","message":"Path `description` is required.","name":"ValidatorError","path":"description","properties":{"message":"Path `description` is required.","path":"description","type":"required"}},"menu.1.price":{"kind":"required","message":"Path `price` is required.","name":"ValidatorError","path":"price","properties":{"message":"Path `price` is required.","path":"price","type":"required"}}},"level":"error","message":"restaurant validation failed: menu.1.price: Path `price` is required., menu.1.description: Path `description` is required. restaurant validation failed: menu.1.price: Path `price` is required., menu.1.description: Path `description` is required.","stack":"ValidationError: restaurant validation failed: menu.1.price: Path `price` is required., menu.1.description: Path `description` is required.\n    at model.Document.invalidate (E:\\food\\node_modules\\mongoose\\lib\\document.js:2782:32)\n    at EmbeddedDocument.invalidate (E:\\food\\node_modules\\mongoose\\lib\\types\\embedded.js:298:29)\n    at E:\\food\\node_modules\\mongoose\\lib\\document.js:2574:17\n    at E:\\food\\node_modules\\mongoose\\lib\\schematype.js:1273:9\n    at processTicksAndRejections (node:internal/process/task_queues:78:11)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"foundedFoods.find is not a function foundedFoods.find is not a function","stack":"TypeError: foundedFoods.find is not a function\n    at E:\\food\\app\\controllers\\food.ts:38:40\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at fulfilled (E:\\food\\app\\controllers\\food.ts:16:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"foundedFoods.map is not a function foundedFoods.map is not a function","stack":"TypeError: foundedFoods.map is not a function\n    at E:\\food\\app\\controllers\\food.ts:38:22\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at fulfilled (E:\\food\\app\\controllers\\food.ts:16:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Converting circular structure to JSON\n    --> starting at object with constructor 'NativeTopology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle Converting circular structure to JSON\n    --> starting at object with constructor 'NativeTopology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle","stack":"TypeError: Converting circular structure to JSON\n    --> starting at object with constructor 'NativeTopology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle\n    at JSON.stringify (<anonymous>)\n    at stringify (E:\\food\\node_modules\\express\\lib\\response.js:1150:12)\n    at ServerResponse.json (E:\\food\\node_modules\\express\\lib\\response.js:271:14)\n    at Helpers.sendResponse (E:\\food\\app\\helpers\\helpers.ts:7:28)\n    at E:\\food\\app\\controllers\\food.ts:46:17\n    at step (E:\\food\\app\\controllers\\food.ts:33:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:14:53)\n    at fulfilled (E:\\food\\app\\controllers\\food.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"RestaurantModel.findAndUpdate is not a function RestaurantModel.findAndUpdate is not a function","stack":"TypeError: RestaurantModel.findAndUpdate is not a function\n    at E:\\food\\app\\controllers\\food.ts:38:45\n    at step (E:\\food\\app\\controllers\\food.ts:33:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:14:53)\n    at fulfilled (E:\\food\\app\\controllers\\food.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Converting circular structure to JSON\n    --> starting at object with constructor 'NativeTopology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle Converting circular structure to JSON\n    --> starting at object with constructor 'NativeTopology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle","stack":"TypeError: Converting circular structure to JSON\n    --> starting at object with constructor 'NativeTopology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle\n    at JSON.stringify (<anonymous>)\n    at stringify (E:\\food\\node_modules\\express\\lib\\response.js:1150:12)\n    at ServerResponse.json (E:\\food\\node_modules\\express\\lib\\response.js:271:14)\n    at Helpers.sendResponse (E:\\food\\app\\helpers\\helpers.ts:7:28)\n    at E:\\food\\app\\controllers\\food.ts:48:17\n    at step (E:\\food\\app\\controllers\\food.ts:33:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:14:53)\n    at fulfilled (E:\\food\\app\\controllers\\food.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"error","message":"RestaurantModel.findOneAndModify is not a function RestaurantModel.findOneAndModify is not a function","stack":"TypeError: RestaurantModel.findOneAndModify is not a function\n    at E:\\food\\app\\controllers\\food.ts:38:45\n    at step (E:\\food\\app\\controllers\\food.ts:33:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:14:53)\n    at fulfilled (E:\\food\\app\\controllers\\food.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"error","message":"RestaurantModel.findAndModify is not a function RestaurantModel.findAndModify is not a function","stack":"TypeError: RestaurantModel.findAndModify is not a function\n    at E:\\food\\app\\controllers\\food.ts:38:45\n    at step (E:\\food\\app\\controllers\\food.ts:33:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:14:53)\n    at fulfilled (E:\\food\\app\\controllers\\food.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"RestaurantModel.findAndUpdate is not a function RestaurantModel.findAndUpdate is not a function","stack":"TypeError: RestaurantModel.findAndUpdate is not a function\n    at E:\\food\\app\\controllers\\food.ts:38:45\n    at step (E:\\food\\app\\controllers\\food.ts:33:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:14:53)\n    at fulfilled (E:\\food\\app\\controllers\\food.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Converting circular structure to JSON\n    --> starting at object with constructor 'NativeTopology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle Converting circular structure to JSON\n    --> starting at object with constructor 'NativeTopology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle","stack":"TypeError: Converting circular structure to JSON\n    --> starting at object with constructor 'NativeTopology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle\n    at JSON.stringify (<anonymous>)\n    at stringify (E:\\food\\node_modules\\express\\lib\\response.js:1150:12)\n    at ServerResponse.json (E:\\food\\node_modules\\express\\lib\\response.js:271:14)\n    at Helpers.sendResponse (E:\\food\\app\\helpers\\helpers.ts:7:28)\n    at E:\\food\\app\\controllers\\food.ts:50:17\n    at step (E:\\food\\app\\controllers\\food.ts:33:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:14:53)\n    at fulfilled (E:\\food\\app\\controllers\\food.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Converting circular structure to JSON\n    --> starting at object with constructor 'NativeTopology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle Converting circular structure to JSON\n    --> starting at object with constructor 'NativeTopology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle","stack":"TypeError: Converting circular structure to JSON\n    --> starting at object with constructor 'NativeTopology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle\n    at JSON.stringify (<anonymous>)\n    at stringify (E:\\food\\node_modules\\express\\lib\\response.js:1150:12)\n    at ServerResponse.json (E:\\food\\node_modules\\express\\lib\\response.js:271:14)\n    at Helpers.sendResponse (E:\\food\\app\\helpers\\helpers.ts:7:28)\n    at E:\\food\\app\\controllers\\food.ts:51:17\n    at step (E:\\food\\app\\controllers\\food.ts:33:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:14:53)\n    at fulfilled (E:\\food\\app\\controllers\\food.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"[_id]\" (type string) at path \"_id\" for model \"restaurant\" Cast to ObjectId failed for value \"[_id]\" (type string) at path \"_id\" for model \"restaurant\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"[_id]\" (type string) at path \"_id\" for model \"restaurant\"\n    at model.Query.exec (E:\\food\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Query.then (E:\\food\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)","stringValue":"\"[_id]\"","value":"[_id]","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"[_id]\" (type string) at path \"_id\" for model \"restaurant\" Cast to ObjectId failed for value \"[_id]\" (type string) at path \"_id\" for model \"restaurant\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"[_id]\" (type string) at path \"_id\" for model \"restaurant\"\n    at model.Query.exec (E:\\food\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Query.then (E:\\food\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)","stringValue":"\"[_id]\"","value":"[_id]","valueType":"string"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"[_id]\" (type string) at path \"_id\" for model \"restaurant\" Cast to ObjectId failed for value \"[_id]\" (type string) at path \"_id\" for model \"restaurant\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"[_id]\" (type string) at path \"_id\" for model \"restaurant\"\n    at model.Query.exec (E:\\food\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Query.then (E:\\food\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)","stringValue":"\"[_id]\"","value":"[_id]","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"[_id]\" (type string) at path \"_id\" for model \"restaurant\" Cast to ObjectId failed for value \"[_id]\" (type string) at path \"_id\" for model \"restaurant\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"[_id]\" (type string) at path \"_id\" for model \"restaurant\"\n    at model.Query.exec (E:\\food\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Query.then (E:\\food\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)","stringValue":"\"[_id]\"","value":"[_id]","valueType":"string"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"code":"ENOENT","errno":-4058,"level":"error","message":"ENOENT: no such file or directory, open 'E:\\food\\uploads\\empty_1683652056670.jpg' ENOENT: no such file or directory, open 'E:\\food\\uploads\\empty_1683652056670.jpg'","path":"E:\\food\\uploads\\empty_1683652056670.jpg","stack":"Error: ENOENT: no such file or directory, open 'E:\\food\\uploads\\empty_1683652056670.jpg'","storageErrors":[],"syscall":"open"}
{"level":"info","message":"db connected"}
{"code":"ENOENT","errno":-4058,"level":"error","message":"ENOENT: no such file or directory, open 'E:\\food\\public\\images\\food\\empty_1683652111333.jpg' ENOENT: no such file or directory, open 'E:\\food\\public\\images\\food\\empty_1683652111333.jpg'","path":"E:\\food\\public\\images\\food\\empty_1683652111333.jpg","stack":"Error: ENOENT: no such file or directory, open 'E:\\food\\public\\images\\food\\empty_1683652111333.jpg'","storageErrors":[],"syscall":"open"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"FileHandler.removeFileByPath is not a function FileHandler.removeFileByPath is not a function","stack":"TypeError: FileHandler.removeFileByPath is not a function\n    at E:\\food\\app\\helpers\\multer.ts:54:21\n    at Array.map (<anonymous>)\n    at deleteFilesOnError (E:\\food\\app\\helpers\\multer.ts:53:11)\n    at module.exports (E:\\food\\app\\middlewares\\validator.ts:13:27)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at middleware (E:\\food\\node_modules\\.pnpm\\express-validator@6.15.0\\node_modules\\express-validator\\src\\middlewares\\check.js:16:13)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"error","message":"FileHandler is not a function FileHandler is not a function","stack":"TypeError: FileHandler is not a function\n    at E:\\food\\app\\helpers\\multer.ts:54:9\n    at Array.map (<anonymous>)\n    at deleteFilesOnError (E:\\food\\app\\helpers\\multer.ts:53:11)\n    at module.exports (E:\\food\\app\\middlewares\\validator.ts:13:27)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at middleware (E:\\food\\node_modules\\.pnpm\\express-validator@6.15.0\\node_modules\\express-validator\\src\\middlewares\\check.js:16:13)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"error","message":"fileHandler.removeFileByPath is not a function fileHandler.removeFileByPath is not a function","stack":"TypeError: fileHandler.removeFileByPath is not a function\n    at E:\\food\\app\\helpers\\multer.ts:54:21\n    at Array.map (<anonymous>)\n    at deleteFilesOnError (E:\\food\\app\\helpers\\multer.ts:53:11)\n    at module.exports (E:\\food\\app\\middlewares\\validator.ts:13:27)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at middleware (E:\\food\\node_modules\\.pnpm\\express-validator@6.15.0\\node_modules\\express-validator\\src\\middlewares\\check.js:16:13)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"error","message":"fileHandler.removeFileByPath is not a function fileHandler.removeFileByPath is not a function","stack":"TypeError: fileHandler.removeFileByPath is not a function\n    at E:\\food\\app\\helpers\\multer.ts:55:21\n    at Array.map (<anonymous>)\n    at deleteFilesOnError (E:\\food\\app\\helpers\\multer.ts:54:11)\n    at module.exports (E:\\food\\app\\middlewares\\validator.ts:13:27)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at middleware (E:\\food\\node_modules\\.pnpm\\express-validator@6.15.0\\node_modules\\express-validator\\src\\middlewares\\check.js:16:13)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"RestaurantModel.findAll is not a function RestaurantModel.findAll is not a function","stack":"TypeError: RestaurantModel.findAll is not a function\n    at E:\\food\\app\\controllers\\food.ts:33:50\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.getAllFoods (E:\\food\\app\\controllers\\food.ts:121:16)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\index.js:280:10)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"code":15955,"codeName":"Location15955","level":"error","message":"a group specification must include an _id a group specification must include an _id","name":"MongoError","ok":0,"stack":"MongoError: a group specification must include an _id\n    at MessageStream.messageHandler (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\connection.js:299:20)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at processIncomingData (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:144:12)\n    at MessageStream._write (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:42:5)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)\n    at Socket.emit (node:events:513:28)\n    at Socket.emit (node:domain:489:12)\n    at addChunk (node:internal/streams/readable:315:12)\n    at readableAddChunk (node:internal/streams/readable:289:9)\n    at Socket.Readable.push (node:internal/streams/readable:228:10)\n    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"RestaurantModel.aggregate(...).select is not a function RestaurantModel.aggregate(...).select is not a function","stack":"TypeError: RestaurantModel.aggregate(...).select is not a function\n    at E:\\food\\app\\controllers\\food.ts:49:14\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.getAllFoods (E:\\food\\app\\controllers\\food.ts:121:16)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\index.js:280:10)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"restaurant.countDocuments is not a function restaurant.countDocuments is not a function","stack":"TypeError: restaurant.countDocuments is not a function\n    at E:\\food\\app\\controllers\\food.ts:50:86\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at fulfilled (E:\\food\\app\\controllers\\food.ts:16:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"code":40234,"codeName":"Location40234","level":"error","message":"The field 'menu' must be an accumulator object The field 'menu' must be an accumulator object","name":"MongoError","ok":0,"stack":"MongoError: The field 'menu' must be an accumulator object\n    at MessageStream.messageHandler (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\connection.js:299:20)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at processIncomingData (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:144:12)\n    at MessageStream._write (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:42:5)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)\n    at Socket.emit (node:events:513:28)\n    at Socket.emit (node:domain:489:12)\n    at addChunk (node:internal/streams/readable:315:12)\n    at readableAddChunk (node:internal/streams/readable:289:9)\n    at Socket.Readable.push (node:internal/streams/readable:228:10)\n    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)"}
{"level":"info","message":"db connected"}
{"code":40234,"codeName":"Location40234","level":"error","message":"The field 'menu' must be an accumulator object The field 'menu' must be an accumulator object","name":"MongoError","ok":0,"stack":"MongoError: The field 'menu' must be an accumulator object\n    at MessageStream.messageHandler (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\connection.js:299:20)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at processIncomingData (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:144:12)\n    at MessageStream._write (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:42:5)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)\n    at Socket.emit (node:events:513:28)\n    at Socket.emit (node:domain:489:12)\n    at addChunk (node:internal/streams/readable:315:12)\n    at readableAddChunk (node:internal/streams/readable:289:9)\n    at Socket.Readable.push (node:internal/streams/readable:228:10)\n    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"code":28650,"codeName":"Location28650","level":"error","message":"Invalid $project :: caused by :: Missing 'cond' parameter to $filter Invalid $project :: caused by :: Missing 'cond' parameter to $filter","name":"MongoError","ok":0,"stack":"MongoError: Invalid $project :: caused by :: Missing 'cond' parameter to $filter\n    at MessageStream.messageHandler (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\connection.js:299:20)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at processIncomingData (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:144:12)\n    at MessageStream._write (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:42:5)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)\n    at Socket.emit (node:events:513:28)\n    at Socket.emit (node:domain:489:12)\n    at addChunk (node:internal/streams/readable:315:12)\n    at readableAddChunk (node:internal/streams/readable:289:9)\n    at Socket.Readable.push (node:internal/streams/readable:228:10)\n    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)"}
{"level":"info","message":"db connected"}
{"code":16410,"codeName":"Location16410","level":"error","message":"FieldPath field names may not start with '$'. Consider using $getField or $setField. FieldPath field names may not start with '$'. Consider using $getField or $setField.","name":"MongoError","ok":0,"stack":"MongoError: FieldPath field names may not start with '$'. Consider using $getField or $setField.\n    at MessageStream.messageHandler (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\connection.js:299:20)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at processIncomingData (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:144:12)\n    at MessageStream._write (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:42:5)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)\n    at Socket.emit (node:events:513:28)\n    at Socket.emit (node:domain:489:12)\n    at addChunk (node:internal/streams/readable:315:12)\n    at readableAddChunk (node:internal/streams/readable:289:9)\n    at Socket.Readable.push (node:internal/streams/readable:228:10)\n    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)"}
{"level":"info","message":"db connected"}
{"code":40234,"codeName":"Location40234","level":"error","message":"The field '$push' must be an accumulator object The field '$push' must be an accumulator object","name":"MongoError","ok":0,"stack":"MongoError: The field '$push' must be an accumulator object\n    at MessageStream.messageHandler (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\connection.js:299:20)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at processIncomingData (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:144:12)\n    at MessageStream._write (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:42:5)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)\n    at Socket.emit (node:events:513:28)\n    at Socket.emit (node:domain:489:12)\n    at addChunk (node:internal/streams/readable:315:12)\n    at readableAddChunk (node:internal/streams/readable:289:9)\n    at Socket.Readable.push (node:internal/streams/readable:228:10)\n    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)"}
{"level":"info","message":"db connected"}
{"code":15947,"codeName":"Location15947","level":"error","message":"a group's fields must be specified in an object a group's fields must be specified in an object","name":"MongoError","ok":0,"stack":"MongoError: a group's fields must be specified in an object\n    at MessageStream.messageHandler (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\connection.js:299:20)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at processIncomingData (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:144:12)\n    at MessageStream._write (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:42:5)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)\n    at Socket.emit (node:events:513:28)\n    at Socket.emit (node:domain:489:12)\n    at addChunk (node:internal/streams/readable:315:12)\n    at readableAddChunk (node:internal/streams/readable:289:9)\n    at Socket.Readable.push (node:internal/streams/readable:228:10)\n    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Parameter \"filter\" to find() must be an object, got [object Object] Parameter \"filter\" to find() must be an object, got [object Object]","stack":"ObjectParameterError: Parameter \"filter\" to find() must be an object, got [object Object]\n    at model.Query.Query.find (E:\\food\\node_modules\\.pnpm\\mongoose@5.13.16\\node_modules\\mongoose\\lib\\query.js:2098:16)\n    at Function.find (E:\\food\\node_modules\\.pnpm\\mongoose@5.13.16\\node_modules\\mongoose\\lib\\model.js:2165:13)\n    at E:\\food\\app\\controllers\\food.ts:33:50\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.getAllFoods (E:\\food\\app\\controllers\\food.ts:121:16)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\index.js:284:15"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"limit cannot be used with distinct limit cannot be used with distinct","stack":"Error: limit cannot be used with distinct\n    at model.Query.Query._validate (E:\\food\\node_modules\\.pnpm\\mquery@3.2.5\\node_modules\\mquery\\lib\\mquery.js:3212:11)\n    at model.Query.Query.<computed> [as limit] (E:\\food\\node_modules\\.pnpm\\mquery@3.2.5\\node_modules\\mquery\\lib\\mquery.js:1458:10)\n    at E:\\food\\app\\controllers\\food.ts:33:67\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.getAllFoods (E:\\food\\app\\controllers\\food.ts:121:16)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\index.js:284:15"}
{"level":"info","message":"db connected"}
{"code":2,"codeName":"BadValue","level":"error","message":"unknown top level operator: $limit. If you have a field name that starts with a '$' symbol, consider using $getField or $setField. unknown top level operator: $limit. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.","name":"MongoError","ok":0,"stack":"MongoError: unknown top level operator: $limit. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.\n    at MessageStream.messageHandler (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\connection.js:299:20)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at processIncomingData (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:144:12)\n    at MessageStream._write (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:42:5)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)\n    at Socket.emit (node:events:513:28)\n    at Socket.emit (node:domain:489:12)\n    at addChunk (node:internal/streams/readable:315:12)\n    at readableAddChunk (node:internal/streams/readable:289:9)\n    at Socket.Readable.push (node:internal/streams/readable:228:10)\n    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Callback must be a function, got [object Object] Callback must be a function, got [object Object]","stack":"MongooseError: Callback must be a function, got [object Object]\n    at Function.Model.$handleCallbackError (E:\\food\\node_modules\\.pnpm\\mongoose@5.13.16\\node_modules\\mongoose\\lib\\model.js:5075:11)\n    at Function.distinct (E:\\food\\node_modules\\.pnpm\\mongoose@5.13.16\\node_modules\\mongoose\\lib\\model.js:2417:19)\n    at E:\\food\\app\\controllers\\food.ts:33:50\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.getAllFoods (E:\\food\\app\\controllers\\food.ts:121:16)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\index.js:284:15"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Callback must be a function, got [object Object] Callback must be a function, got [object Object]","stack":"MongooseError: Callback must be a function, got [object Object]\n    at Function.Model.$handleCallbackError (E:\\food\\node_modules\\.pnpm\\mongoose@5.13.16\\node_modules\\mongoose\\lib\\model.js:5075:11)\n    at Function.distinct (E:\\food\\node_modules\\.pnpm\\mongoose@5.13.16\\node_modules\\mongoose\\lib\\model.js:2417:19)\n    at E:\\food\\app\\controllers\\food.ts:33:50\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.getAllFoods (E:\\food\\app\\controllers\\food.ts:121:16)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\index.js:284:15"}
{"level":"info","message":"db connected"}
{"code":2,"codeName":"BadValue","level":"error","message":"unknown top level operator: $limit. If you have a field name that starts with a '$' symbol, consider using $getField or $setField. unknown top level operator: $limit. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.","name":"MongoError","ok":0,"stack":"MongoError: unknown top level operator: $limit. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.\n    at MessageStream.messageHandler (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\connection.js:299:20)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at processIncomingData (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:144:12)\n    at MessageStream._write (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:42:5)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)\n    at Socket.emit (node:events:513:28)\n    at Socket.emit (node:domain:489:12)\n    at addChunk (node:internal/streams/readable:315:12)\n    at readableAddChunk (node:internal/streams/readable:289:9)\n    at Socket.Readable.push (node:internal/streams/readable:228:10)\n    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)"}
{"level":"info","message":"db connected"}
{"level":"error","message":"RestaurantModel.limit is not a function RestaurantModel.limit is not a function","stack":"TypeError: RestaurantModel.limit is not a function\n    at E:\\food\\app\\controllers\\food.ts:33:50\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.getAllFoods (E:\\food\\app\\controllers\\food.ts:121:16)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\index.js:280:10)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"code":40234,"codeName":"Location40234","level":"error","message":"The field 'menu' must be an accumulator object The field 'menu' must be an accumulator object","name":"MongoError","ok":0,"stack":"MongoError: The field 'menu' must be an accumulator object\n    at MessageStream.messageHandler (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\connection.js:299:20)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at processIncomingData (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:144:12)\n    at MessageStream._write (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:42:5)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)\n    at Socket.emit (node:events:513:28)\n    at Socket.emit (node:domain:489:12)\n    at addChunk (node:internal/streams/readable:315:12)\n    at readableAddChunk (node:internal/streams/readable:289:9)\n    at Socket.Readable.push (node:internal/streams/readable:228:10)\n    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"code":40234,"codeName":"Location40234","level":"error","message":"The field 'name' must be an accumulator object The field 'name' must be an accumulator object","name":"MongoError","ok":0,"stack":"MongoError: The field 'name' must be an accumulator object\n    at MessageStream.messageHandler (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\connection.js:299:20)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at processIncomingData (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:144:12)\n    at MessageStream._write (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:42:5)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)\n    at Socket.emit (node:events:513:28)\n    at Socket.emit (node:domain:489:12)\n    at addChunk (node:internal/streams/readable:315:12)\n    at readableAddChunk (node:internal/streams/readable:289:9)\n    at Socket.Readable.push (node:internal/streams/readable:228:10)\n    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)"}
{"level":"info","message":"db connected"}
{"code":40234,"codeName":"Location40234","level":"error","message":"The field 'name' must be an accumulator object The field 'name' must be an accumulator object","name":"MongoError","ok":0,"stack":"MongoError: The field 'name' must be an accumulator object\n    at MessageStream.messageHandler (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\connection.js:299:20)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at processIncomingData (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:144:12)\n    at MessageStream._write (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:42:5)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)\n    at Socket.emit (node:events:513:28)\n    at Socket.emit (node:domain:489:12)\n    at addChunk (node:internal/streams/readable:315:12)\n    at readableAddChunk (node:internal/streams/readable:289:9)\n    at Socket.Readable.push (node:internal/streams/readable:228:10)\n    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)"}
{"level":"info","message":"db connected"}
{"code":40234,"codeName":"Location40234","level":"error","message":"The field 'name' must be an accumulator object The field 'name' must be an accumulator object","name":"MongoError","ok":0,"stack":"MongoError: The field 'name' must be an accumulator object\n    at MessageStream.messageHandler (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\connection.js:299:20)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at processIncomingData (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:144:12)\n    at MessageStream._write (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:42:5)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)\n    at Socket.emit (node:events:513:28)\n    at Socket.emit (node:domain:489:12)\n    at addChunk (node:internal/streams/readable:315:12)\n    at readableAddChunk (node:internal/streams/readable:289:9)\n    at Socket.Readable.push (node:internal/streams/readable:228:10)\n    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"code":40234,"codeName":"Location40234","level":"error","message":"The field 'name' must be an accumulator object The field 'name' must be an accumulator object","name":"MongoError","ok":0,"stack":"MongoError: The field 'name' must be an accumulator object\n    at MessageStream.messageHandler (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\connection.js:299:20)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at processIncomingData (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:144:12)\n    at MessageStream._write (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:42:5)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)\n    at Socket.emit (node:events:513:28)\n    at Socket.emit (node:domain:489:12)\n    at addChunk (node:internal/streams/readable:315:12)\n    at readableAddChunk (node:internal/streams/readable:289:9)\n    at Socket.Readable.push (node:internal/streams/readable:228:10)\n    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Cannot read properties of undefined (reading 'length') Cannot read properties of undefined (reading 'length')","stack":"TypeError: Cannot read properties of undefined (reading 'length')\n    at E:\\food\\app\\controllers\\food.ts:34:87\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at fulfilled (E:\\food\\app\\controllers\\food.ts:16:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Cannot read properties of undefined (reading 'length') Cannot read properties of undefined (reading 'length')","stack":"TypeError: Cannot read properties of undefined (reading 'length')\n    at E:\\food\\app\\controllers\\food.ts:34:87\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at fulfilled (E:\\food\\app\\controllers\\food.ts:16:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"code":168,"codeName":"InvalidPipelineOperator","level":"error","message":"Unrecognized expression '$match' Unrecognized expression '$match'","name":"MongoError","ok":0,"stack":"MongoError: Unrecognized expression '$match'\n    at MessageStream.messageHandler (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\connection.js:299:20)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at processIncomingData (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:144:12)\n    at MessageStream._write (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:42:5)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)\n    at Socket.emit (node:events:513:28)\n    at Socket.emit (node:domain:489:12)\n    at addChunk (node:internal/streams/readable:315:12)\n    at readableAddChunk (node:internal/streams/readable:289:9)\n    at Socket.Readable.push (node:internal/streams/readable:228:10)\n    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)"}
{"level":"info","message":"db connected"}
{"code":168,"codeName":"InvalidPipelineOperator","level":"error","message":"Unrecognized expression '$match' Unrecognized expression '$match'","name":"MongoError","ok":0,"stack":"MongoError: Unrecognized expression '$match'\n    at MessageStream.messageHandler (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\connection.js:299:20)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at processIncomingData (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:144:12)\n    at MessageStream._write (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:42:5)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)\n    at Socket.emit (node:events:513:28)\n    at Socket.emit (node:domain:489:12)\n    at addChunk (node:internal/streams/readable:315:12)\n    at readableAddChunk (node:internal/streams/readable:289:9)\n    at Socket.Readable.push (node:internal/streams/readable:228:10)\n    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"code":31253,"codeName":"Location31253","level":"error","message":"Cannot do inclusion on field comment in exclusion projection Cannot do inclusion on field comment in exclusion projection","name":"MongoError","ok":0,"stack":"MongoError: Cannot do inclusion on field comment in exclusion projection\n    at MessageStream.messageHandler (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\connection.js:299:20)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at processIncomingData (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:144:12)\n    at MessageStream._write (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:42:5)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)\n    at Socket.emit (node:events:513:28)\n    at Socket.emit (node:domain:489:12)\n    at addChunk (node:internal/streams/readable:315:12)\n    at readableAddChunk (node:internal/streams/readable:289:9)\n    at Socket.Readable.push (node:internal/streams/readable:228:10)\n    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"this.find(...).select is not a function this.find(...).select is not a function","stack":"TypeError: this.find(...).select is not a function\n    at FoodRepo.findAllFoodsClient (E:\\food\\repositories\\foodRepo.ts:13:12)\n    at E:\\food\\app\\controllers\\food.ts:34:47\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.getAllFoods (E:\\food\\app\\controllers\\food.ts:122:16)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\index.js:346:12)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"this.find(...).select is not a function this.find(...).select is not a function","stack":"TypeError: this.find(...).select is not a function\n    at FoodRepo.findAllFoodsClient (E:\\food\\repositories\\foodRepo.ts:13:12)\n    at E:\\food\\app\\controllers\\food.ts:34:47\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.getAllFoods (E:\\food\\app\\controllers\\food.ts:122:16)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\index.js:346:12)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"FoodServices.findAllFoodsClient is not a function FoodServices.findAllFoodsClient is not a function","stack":"TypeError: FoodServices.findAllFoodsClient is not a function\n    at E:\\food\\app\\controllers\\food.ts:34:47\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.getAllFoods (E:\\food\\app\\controllers\\food.ts:122:16)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\index.js:280:10)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"helpers.sendResponse is not a function helpers.sendResponse is not a function","stack":"TypeError: helpers.sendResponse is not a function\n    at seedUploads (E:\\food\\app\\helpers\\multer.ts:60:13)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\index.js:328:13)\n    at E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\index.js:286:9\n    at Function.process_params (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\index.js:280:10)\n    at done (E:\\food\\node_modules\\.pnpm\\multer@1.4.5-lts.1\\node_modules\\multer\\lib\\make-middleware.js:45:7)\n    at indicateDone (E:\\food\\node_modules\\.pnpm\\multer@1.4.5-lts.1\\node_modules\\multer\\lib\\make-middleware.js:49:68)\n    at E:\\food\\node_modules\\.pnpm\\multer@1.4.5-lts.1\\node_modules\\multer\\lib\\make-middleware.js:155:11\n    at WriteStream.<anonymous> (E:\\food\\node_modules\\.pnpm\\multer@1.4.5-lts.1\\node_modules\\multer\\storage\\disk.js:43:9)\n    at WriteStream.emit (node:events:525:35)\n    at WriteStream.emit (node:domain:489:12)\n    at finish (node:internal/streams/writable:756:10)\n    at finishMaybe (node:internal/streams/writable:741:9)\n    at afterWrite (node:internal/streams/writable:506:3)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"restaurant validation failed: menu.0.comments: Parameter \"obj\" to Document() must be an object, got "}
{"level":"info","message":"db connected"}
{"level":"error","message":"Cannot set properties of null (setting 'menu')"}
{"level":"error","message":"Cannot set properties of null (setting 'menu')"}
{"level":"error","message":"Cannot set properties of null (setting 'menu')"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Cannot set properties of null (setting 'menu')"}
{"level":"error","message":"Cannot set properties of null (setting 'menu')"}
{"level":"error","message":"Cannot set properties of null (setting 'menu')"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Cannot set properties of null (setting 'menu')"}
{"level":"error","message":"Cannot set properties of null (setting 'menu')"}
{"level":"error","message":"Cannot set properties of null (setting 'menu')"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Cannot set properties of null (setting 'menu')"}
{"level":"error","message":"Cannot set properties of null (setting 'menu')"}
{"level":"error","message":"Cannot set properties of null (setting 'menu')"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Cannot set properties of null (setting 'menu')"}
{"level":"error","message":"Cannot set properties of null (setting 'menu')"}
{"level":"error","message":"Cannot set properties of null (setting 'menu')"}
{"level":"info","message":"db connected"}
{"level":"error","message":"restaurant validation failed: menu.0.comments: Parameter \"obj\" to Document() must be an object, got "}
{"level":"info","message":"db connected"}
{"level":"error","message":"restaurant validation failed: menu.0._id: Cast to ObjectId failed for value \"[\n  {\n    name: 'مرغ پرتقالی',\n    description: 'همه ما مرغ خوردیم اما پرتقالی آن را نشنیدیم. این غذای خوشمزه به راحتی و با آب پرتقال درست می‍شود. پرتقال یکی از میوه‌های پر طرفدار فصل زمستان است و این غذا برای این فصل پیشنهاد می‌شود.',\n    score: 5,\n    price: 185000,\n    images: [ [Object] ],\n    comments: ''\n  },\n  {\n    name: 'رولت گوشت با جعفری و گردو',\n    description: 'یک غذای خوشمزه و جدید که با گوشت چرخ کرده درست می‍شود. برای تهیه این غذا به مواد زیر نیاز دارید',\n    score: 4.3,\n    price: 255000,\n    images: [ [Object] ],\n    comments: [ [Object], [Object], [Object] ]\n  },\n  {\n    name: 'پای همبرگر با سس قارچ',\n    description: 'اسم این غذا کمی عجیب و غریب است. اما خوردن آن را به شما برای ناهار توصیه میکنیم. این غذای جدید از مواد زیر تشکیل می‌شود',\n    score: 5,\n    price: 131000,\n    images: [ [Object] ],\n    comments: [ [Object], [Object] ]\n  },\n  {\n    name: 'کوکو مرغ سوخاری',\n    description: 'این غذا هم خوشمزه و هم جدید است. برای کوکو مرغ سوخاری نیاز به سرخ کن ندارید و با مواد زیر می‌توانید این غذای جدید را درست کنید.',\n    score: 4.5,\n    price: 267500,\n    images: [ [Object] ],\n    comments: [ [Object], [Object] ]\n  },\n  {\n    name: 'خوراک مرغ و قارچ',\n    description: 'این غذای خوشمزه از سینه مرغ شکم پر با قارچ و پنیر درست می‌شود. این مواد اینقدر جذاب هستند که هر کسیو به وجد میاره تا برای یک بارم که شده این غذا را درست کند.',\n    score: 3.9,\n    price: 140000,\n    images: [ [Object] ],\n    comments: [ [Object], [Object] ]\n  },\n  {\n    name: 'راتا مرغ و شوید',\n    description: 'راتای مرغ و شوید یک غذای فینگرفودی است اما می‌توانید به مقدار زیاد درست کرده و برای ناهار میل کنید. برای طرز تهیه راتای مرغ و شوید به مواد زیر نیاز داریم:',\n    score: 2.7,\n    price: 245000,\n    images: [ [Object] ],\n    comments: [ [Object] ]\n  },\n  {\n    name: 'جیب تاجر مرغ',\n    description: 'جیب تاجر یک غذای خوشمزه و جدید برای ناهار است. داخل جیب تاجر را با هر ماده‌ای می‌توانید پر کنید. با انواع سالادها مثل سالاد ماکارونی یا سالاد الویه و همچنین با مرغ، گوشت یا سبزیجات نیز می‌توانید داخل جیب تاجر را پر کنید. برای طرز تهیه این غذای خوشمزه با ما همراه باشید. ',\n    score: 1.3,\n    price: 315000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'گراتن مرغ و سیب زمینی',\n    description: 'گراتن یک غذای فرانسویه که با بادمجان یا سینه مرغ و سیب زمینی درست می‌شود. این غذای خوشمزه فرانسوی به مواد زیر نیاز دارد:',\n    score: 3,\n    price: 114000,\n    images: [ [Object] ],\n    comments: [ [Object] ]\n  },\n  {\n    name: 'جامبو شکم پر',\n    description: 'جامبو یک غذای خوشمزه و جدید است که به عنوان فینگرفود در مهمانی نیز می‌توانید سرو کنید. برای تهیه جامبو شلز به مواد زیر نیاز داریم:',\n    score: 4,\n    price: 185000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'تاکو گوشت',\n    description: 'تاکو یک غذای مکزیکی خوشمزه است و در همه جای دنیا سرو می‌شود. تاکو با طعم‌های مختلف و با گوشت مرغ، ماهی، سبزیجات و گوشت درست می‌شود. در اینجا تاکو گوشت را به شما آموزش می‌دهیم.',\n    score: 5,\n    price: 124000,\n    images: [ [Object] ],\n    comments: [ [Object], [Object], [Object] ]\n  }\n]\" (type Array) at path \"_id\", menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.0.name: Path `name` is required."}
{"level":"error","message":"restaurant validation failed: menu.5._id: Cast to ObjectId failed for value \"[\n  {\n    name: 'املت ایتالیایی',\n    description: 'یک غذای خوشمزه برای صبحانه یا ناهار املت ایتالیایی است. این غذا با تخم مرغ درست می‌شود. مواد لازم برای تهیه املت ایتالیایی به شرح زیر است:',\n    score: 3.7,\n    price: 112000,\n    images: [ [Object] ],\n    comments: [ [Object] ]\n  },\n  {\n    name: 'کراکت سیب زمینی و سوسیس',\n    description: 'کراکت سیب زمینی و سوسیس یک غذای جدید است که برای ناهار می‌توانید آن را درست کنید.',\n    score: 4,\n    price: 231400,\n    images: [ [Object] ],\n    comments: [ [Object], [Object] ]\n  },\n  {\n    name: 'پیده (پیتزای ترکی)',\n    description: 'پیده یک پیتزای ترکیه‌ای است که می‌توانید در منزل درست و میل کنید. پیده را با گوشت ادویه زده و کبابی یا گوشت مرغ و سوسیس درست می‌کنند. مواد لازم برای تهیه پیده به شرح زیر است:',\n    score: 5,\n    price: 185000,\n    images: [ [Object] ],\n    comments: [ [Object] ]\n  },\n  {\n    name: 'پیراشکی مرغ و قارچ',\n    description: 'پیراشکی یکی از غذاهای خوشمزه‌ای است که داخل آن مواد مختلفی را می‌توان قرار داد. پیراشکی کالباس، پیراشکی گوشت، پیراشکی مرغ و قارچ از پیراشکی‌های معروف است که ما در اینجا طرز تهیه پیراشکی مرغ و قارچ را آموزش می‌دهیم:',\n    score: 4.6,\n    price: 171000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'سالاد مرغ و قارچ ترکیه‌ای',\n    description: 'این سالاد هم بسیار خوشمزه و هم خاص است. یک سالاد و غذای جدید برای ناها ریا شام می‌توانید درست کنید. برای تهیه سالاد مرغ و قارچ به مواد زیر نیاز داریم:',\n    score: 5,\n    price: 185000,\n    images: [ [Object] ],\n    comments: []\n  }\n]\" (type Array) at path \"_id\", menu.5.price: Path `price` is required., menu.5.description: Path `description` is required., menu.5.name: Path `name` is required."}
{"level":"error","message":"restaurant validation failed: menu.7._id: Cast to ObjectId failed for value \"[\n  {\n    name: 'سیب زمینی شکم پر',\n    description: 'غذایی جدید و خوشمزه و به راحتی با سیب زمینی درست می‌شود. برای درست کردن این غذا به موادی مانند :',\n    score: 4,\n    price: 197000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'کیک گوشت',\n    description: 'کیک گوشت یک غذای خوشمزه و جدید است که مانند کیک مرغ پر طرفداره. کیک مرغ ظاهر شیکی دارد و برای پذیرایی از مهمان برای ناهار و شام مناسب است.',\n    score: 5,\n    price: 185000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'کوکو ذرت (فریتر ذرت)',\n    description: 'یک غذای جدید و خوشمزه که با نان می‌توانید میل کنید. کوکوی ذرت غذایی مقوی برای کسانی است که به سبزیجات علاقه دارند. برای تهیه کوکو ذرت به مواد زیر نیاز داریم:',\n    score: 3,\n    price: 185000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'فطایر گوشت',\n    description: 'فطایر یک غذای عربی و خوشمزه است که از موادی مانند قارچ، فلفل دلمه‌ای، گوشت چرخ کرده، ذرت شیرین و خمیر آن از آرد نان فانتزی، کره، شیر، نمک و خمیر مایه درست می‌شود. داخل خمیر آن موادی که می‌گذارید کاملا سلیقه‌ای است. ',\n    score: 4.1,\n    price: 136100,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'بیکد زیتی',\n    description: 'بیکد زیتی یک غذای ایتالیایی امریکایی است که با پاستا زیتی و سس مخصوص درست می‌شود. برای تهیه این غذای خوشمزه به مواد زیر نیاز داریم.',\n    score: 4,\n    price: 115000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'گلت (galette) با بادمجان و قارچ',\n    description: 'گلت (galette) از خانواده تارت و پای به شمار میاد. در واقع خمیر گلت همان خمیر تارت و پای است با این تفاوت که خمیر گلت برخلاف تارت، نیازی به هیچ نوع قالبی ندارد و باید با دست به آن شکل داد! قطعا یکی از دلایلی که باعث محبوبیت گلت شده میتوان همین مورد را نام برد! نیازی به  قالب ندارد و تهیه آن آسان و ساده است!',\n    score: 2.4,\n    price: 214000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'کیک سبزیجات',\n    description: 'کیک سبزیجات یک غذای جدید و خوشمزه است که با یک ایده متفاوت می‌توانید آن را درست کنید. برای طرز تهیه کیک سبزیجات خوشمزه به مواد زیر نیاز دارید.',\n    score: 5,\n    price: 185000,\n    images: [ [Object] ],\n    comments: []\n  }\n]\" (type Array) at path \"_id\", menu.7.price: Path `price` is required., menu.7.description: Path `description` is required., menu.7.name: Path `name` is required."}
{"level":"info","message":"db connected"}
{"level":"error","message":"restaurant validation failed: menu.0._id: Cast to ObjectId failed for value \"[\n  {\n    name: 'مرغ پرتقالی',\n    description: 'همه ما مرغ خوردیم اما پرتقالی آن را نشنیدیم. این غذای خوشمزه به راحتی و با آب پرتقال درست می‍شود. پرتقال یکی از میوه‌های پر طرفدار فصل زمستان است و این غذا برای این فصل پیشنهاد می‌شود.',\n    score: 5,\n    price: 185000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'رولت گوشت با جعفری و گردو',\n    description: 'یک غذای خوشمزه و جدید که با گوشت چرخ کرده درست می‍شود. برای تهیه این غذا به مواد زیر نیاز دارید',\n    score: 4.3,\n    price: 255000,\n    images: [ [Object] ],\n    comments: [ [Object], [Object], [Object] ]\n  },\n  {\n    name: 'پای همبرگر با سس قارچ',\n    description: 'اسم این غذا کمی عجیب و غریب است. اما خوردن آن را به شما برای ناهار توصیه میکنیم. این غذای جدید از مواد زیر تشکیل می‌شود',\n    score: 5,\n    price: 131000,\n    images: [ [Object] ],\n    comments: [ [Object], [Object] ]\n  },\n  {\n    name: 'کوکو مرغ سوخاری',\n    description: 'این غذا هم خوشمزه و هم جدید است. برای کوکو مرغ سوخاری نیاز به سرخ کن ندارید و با مواد زیر می‌توانید این غذای جدید را درست کنید.',\n    score: 4.5,\n    price: 267500,\n    images: [ [Object] ],\n    comments: [ [Object], [Object] ]\n  },\n  {\n    name: 'خوراک مرغ و قارچ',\n    description: 'این غذای خوشمزه از سینه مرغ شکم پر با قارچ و پنیر درست می‌شود. این مواد اینقدر جذاب هستند که هر کسیو به وجد میاره تا برای یک بارم که شده این غذا را درست کند.',\n    score: 3.9,\n    price: 140000,\n    images: [ [Object] ],\n    comments: [ [Object], [Object] ]\n  },\n  {\n    name: 'راتا مرغ و شوید',\n    description: 'راتای مرغ و شوید یک غذای فینگرفودی است اما می‌توانید به مقدار زیاد درست کرده و برای ناهار میل کنید. برای طرز تهیه راتای مرغ و شوید به مواد زیر نیاز داریم:',\n    score: 2.7,\n    price: 245000,\n    images: [ [Object] ],\n    comments: [ [Object] ]\n  },\n  {\n    name: 'جیب تاجر مرغ',\n    description: 'جیب تاجر یک غذای خوشمزه و جدید برای ناهار است. داخل جیب تاجر را با هر ماده‌ای می‌توانید پر کنید. با انواع سالادها مثل سالاد ماکارونی یا سالاد الویه و همچنین با مرغ، گوشت یا سبزیجات نیز می‌توانید داخل جیب تاجر را پر کنید. برای طرز تهیه این غذای خوشمزه با ما همراه باشید. ',\n    score: 1.3,\n    price: 315000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'گراتن مرغ و سیب زمینی',\n    description: 'گراتن یک غذای فرانسویه که با بادمجان یا سینه مرغ و سیب زمینی درست می‌شود. این غذای خوشمزه فرانسوی به مواد زیر نیاز دارد:',\n    score: 3,\n    price: 114000,\n    images: [ [Object] ],\n    comments: [ [Object] ]\n  },\n  {\n    name: 'جامبو شکم پر',\n    description: 'جامبو یک غذای خوشمزه و جدید است که به عنوان فینگرفود در مهمانی نیز می‌توانید سرو کنید. برای تهیه جامبو شلز به مواد زیر نیاز داریم:',\n    score: 4,\n    price: 185000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'تاکو گوشت',\n    description: 'تاکو یک غذای مکزیکی خوشمزه است و در همه جای دنیا سرو می‌شود. تاکو با طعم‌های مختلف و با گوشت مرغ، ماهی، سبزیجات و گوشت درست می‌شود. در اینجا تاکو گوشت را به شما آموزش می‌دهیم.',\n    score: 5,\n    price: 124000,\n    images: [ [Object] ],\n    comments: [ [Object], [Object], [Object] ]\n  }\n]\" (type Array) at path \"_id\", menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.0.name: Path `name` is required."}
{"level":"error","message":"restaurant validation failed: menu.5._id: Cast to ObjectId failed for value \"[\n  {\n    name: 'املت ایتالیایی',\n    description: 'یک غذای خوشمزه برای صبحانه یا ناهار املت ایتالیایی است. این غذا با تخم مرغ درست می‌شود. مواد لازم برای تهیه املت ایتالیایی به شرح زیر است:',\n    score: 3.7,\n    price: 112000,\n    images: [ [Object] ],\n    comments: [ [Object] ]\n  },\n  {\n    name: 'کراکت سیب زمینی و سوسیس',\n    description: 'کراکت سیب زمینی و سوسیس یک غذای جدید است که برای ناهار می‌توانید آن را درست کنید.',\n    score: 4,\n    price: 231400,\n    images: [ [Object] ],\n    comments: [ [Object], [Object] ]\n  },\n  {\n    name: 'پیده (پیتزای ترکی)',\n    description: 'پیده یک پیتزای ترکیه‌ای است که می‌توانید در منزل درست و میل کنید. پیده را با گوشت ادویه زده و کبابی یا گوشت مرغ و سوسیس درست می‌کنند. مواد لازم برای تهیه پیده به شرح زیر است:',\n    score: 5,\n    price: 185000,\n    images: [ [Object] ],\n    comments: [ [Object] ]\n  },\n  {\n    name: 'پیراشکی مرغ و قارچ',\n    description: 'پیراشکی یکی از غذاهای خوشمزه‌ای است که داخل آن مواد مختلفی را می‌توان قرار داد. پیراشکی کالباس، پیراشکی گوشت، پیراشکی مرغ و قارچ از پیراشکی‌های معروف است که ما در اینجا طرز تهیه پیراشکی مرغ و قارچ را آموزش می‌دهیم:',\n    score: 4.6,\n    price: 171000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'سالاد مرغ و قارچ ترکیه‌ای',\n    description: 'این سالاد هم بسیار خوشمزه و هم خاص است. یک سالاد و غذای جدید برای ناها ریا شام می‌توانید درست کنید. برای تهیه سالاد مرغ و قارچ به مواد زیر نیاز داریم:',\n    score: 5,\n    price: 185000,\n    images: [ [Object] ],\n    comments: []\n  }\n]\" (type Array) at path \"_id\", menu.5.price: Path `price` is required., menu.5.description: Path `description` is required., menu.5.name: Path `name` is required."}
{"level":"error","message":"restaurant validation failed: menu.7._id: Cast to ObjectId failed for value \"[\n  {\n    name: 'سیب زمینی شکم پر',\n    description: 'غذایی جدید و خوشمزه و به راحتی با سیب زمینی درست می‌شود. برای درست کردن این غذا به موادی مانند :',\n    score: 4,\n    price: 197000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'کیک گوشت',\n    description: 'کیک گوشت یک غذای خوشمزه و جدید است که مانند کیک مرغ پر طرفداره. کیک مرغ ظاهر شیکی دارد و برای پذیرایی از مهمان برای ناهار و شام مناسب است.',\n    score: 5,\n    price: 185000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'کوکو ذرت (فریتر ذرت)',\n    description: 'یک غذای جدید و خوشمزه که با نان می‌توانید میل کنید. کوکوی ذرت غذایی مقوی برای کسانی است که به سبزیجات علاقه دارند. برای تهیه کوکو ذرت به مواد زیر نیاز داریم:',\n    score: 3,\n    price: 185000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'فطایر گوشت',\n    description: 'فطایر یک غذای عربی و خوشمزه است که از موادی مانند قارچ، فلفل دلمه‌ای، گوشت چرخ کرده، ذرت شیرین و خمیر آن از آرد نان فانتزی، کره، شیر، نمک و خمیر مایه درست می‌شود. داخل خمیر آن موادی که می‌گذارید کاملا سلیقه‌ای است. ',\n    score: 4.1,\n    price: 136100,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'بیکد زیتی',\n    description: 'بیکد زیتی یک غذای ایتالیایی امریکایی است که با پاستا زیتی و سس مخصوص درست می‌شود. برای تهیه این غذای خوشمزه به مواد زیر نیاز داریم.',\n    score: 4,\n    price: 115000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'گلت (galette) با بادمجان و قارچ',\n    description: 'گلت (galette) از خانواده تارت و پای به شمار میاد. در واقع خمیر گلت همان خمیر تارت و پای است با این تفاوت که خمیر گلت برخلاف تارت، نیازی به هیچ نوع قالبی ندارد و باید با دست به آن شکل داد! قطعا یکی از دلایلی که باعث محبوبیت گلت شده میتوان همین مورد را نام برد! نیازی به  قالب ندارد و تهیه آن آسان و ساده است!',\n    score: 2.4,\n    price: 214000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'کیک سبزیجات',\n    description: 'کیک سبزیجات یک غذای جدید و خوشمزه است که با یک ایده متفاوت می‌توانید آن را درست کنید. برای طرز تهیه کیک سبزیجات خوشمزه به مواد زیر نیاز دارید.',\n    score: 5,\n    price: 185000,\n    images: [ [Object] ],\n    comments: []\n  }\n]\" (type Array) at path \"_id\", menu.7.price: Path `price` is required., menu.7.description: Path `description` is required., menu.7.name: Path `name` is required."}
{"level":"info","message":"db connected"}
{"level":"error","message":"restaurant validation failed: menu.0._id: Cast to ObjectId failed for value \"[\n  {\n    name: 'مرغ پرتقالی',\n    description: 'همه ما مرغ خوردیم اما پرتقالی آن را نشنیدیم. این غذای خوشمزه به راحتی و با آب پرتقال درست می‍شود. پرتقال یکی از میوه‌های پر طرفدار فصل زمستان است و این غذا برای این فصل پیشنهاد می‌شود.',\n    score: 5,\n    price: 185000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'رولت گوشت با جعفری و گردو',\n    description: 'یک غذای خوشمزه و جدید که با گوشت چرخ کرده درست می‍شود. برای تهیه این غذا به مواد زیر نیاز دارید',\n    score: 4.3,\n    price: 255000,\n    images: [ [Object] ],\n    comments: [ [Object], [Object], [Object] ]\n  },\n  {\n    name: 'پای همبرگر با سس قارچ',\n    description: 'اسم این غذا کمی عجیب و غریب است. اما خوردن آن را به شما برای ناهار توصیه میکنیم. این غذای جدید از مواد زیر تشکیل می‌شود',\n    score: 5,\n    price: 131000,\n    images: [ [Object] ],\n    comments: [ [Object], [Object] ]\n  },\n  {\n    name: 'کوکو مرغ سوخاری',\n    description: 'این غذا هم خوشمزه و هم جدید است. برای کوکو مرغ سوخاری نیاز به سرخ کن ندارید و با مواد زیر می‌توانید این غذای جدید را درست کنید.',\n    score: 4.5,\n    price: 267500,\n    images: [ [Object] ],\n    comments: [ [Object], [Object] ]\n  },\n  {\n    name: 'خوراک مرغ و قارچ',\n    description: 'این غذای خوشمزه از سینه مرغ شکم پر با قارچ و پنیر درست می‌شود. این مواد اینقدر جذاب هستند که هر کسیو به وجد میاره تا برای یک بارم که شده این غذا را درست کند.',\n    score: 3.9,\n    price: 140000,\n    images: [ [Object] ],\n    comments: [ [Object], [Object] ]\n  },\n  {\n    name: 'راتا مرغ و شوید',\n    description: 'راتای مرغ و شوید یک غذای فینگرفودی است اما می‌توانید به مقدار زیاد درست کرده و برای ناهار میل کنید. برای طرز تهیه راتای مرغ و شوید به مواد زیر نیاز داریم:',\n    score: 2.7,\n    price: 245000,\n    images: [ [Object] ],\n    comments: [ [Object] ]\n  },\n  {\n    name: 'جیب تاجر مرغ',\n    description: 'جیب تاجر یک غذای خوشمزه و جدید برای ناهار است. داخل جیب تاجر را با هر ماده‌ای می‌توانید پر کنید. با انواع سالادها مثل سالاد ماکارونی یا سالاد الویه و همچنین با مرغ، گوشت یا سبزیجات نیز می‌توانید داخل جیب تاجر را پر کنید. برای طرز تهیه این غذای خوشمزه با ما همراه باشید. ',\n    score: 1.3,\n    price: 315000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'گراتن مرغ و سیب زمینی',\n    description: 'گراتن یک غذای فرانسویه که با بادمجان یا سینه مرغ و سیب زمینی درست می‌شود. این غذای خوشمزه فرانسوی به مواد زیر نیاز دارد:',\n    score: 3,\n    price: 114000,\n    images: [ [Object] ],\n    comments: [ [Object] ]\n  },\n  {\n    name: 'جامبو شکم پر',\n    description: 'جامبو یک غذای خوشمزه و جدید است که به عنوان فینگرفود در مهمانی نیز می‌توانید سرو کنید. برای تهیه جامبو شلز به مواد زیر نیاز داریم:',\n    score: 4,\n    price: 185000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'تاکو گوشت',\n    description: 'تاکو یک غذای مکزیکی خوشمزه است و در همه جای دنیا سرو می‌شود. تاکو با طعم‌های مختلف و با گوشت مرغ، ماهی، سبزیجات و گوشت درست می‌شود. در اینجا تاکو گوشت را به شما آموزش می‌دهیم.',\n    score: 5,\n    price: 124000,\n    images: [ [Object] ],\n    comments: [ [Object], [Object], [Object] ]\n  }\n]\" (type Array) at path \"_id\", menu.0.price: Path `price` is required., menu.0.description: Path `description` is required., menu.0.name: Path `name` is required."}
{"level":"error","message":"restaurant validation failed: menu.5._id: Cast to ObjectId failed for value \"[\n  {\n    name: 'املت ایتالیایی',\n    description: 'یک غذای خوشمزه برای صبحانه یا ناهار املت ایتالیایی است. این غذا با تخم مرغ درست می‌شود. مواد لازم برای تهیه املت ایتالیایی به شرح زیر است:',\n    score: 3.7,\n    price: 112000,\n    images: [ [Object] ],\n    comments: [ [Object] ]\n  },\n  {\n    name: 'کراکت سیب زمینی و سوسیس',\n    description: 'کراکت سیب زمینی و سوسیس یک غذای جدید است که برای ناهار می‌توانید آن را درست کنید.',\n    score: 4,\n    price: 231400,\n    images: [ [Object] ],\n    comments: [ [Object], [Object] ]\n  },\n  {\n    name: 'پیده (پیتزای ترکی)',\n    description: 'پیده یک پیتزای ترکیه‌ای است که می‌توانید در منزل درست و میل کنید. پیده را با گوشت ادویه زده و کبابی یا گوشت مرغ و سوسیس درست می‌کنند. مواد لازم برای تهیه پیده به شرح زیر است:',\n    score: 5,\n    price: 185000,\n    images: [ [Object] ],\n    comments: [ [Object] ]\n  },\n  {\n    name: 'پیراشکی مرغ و قارچ',\n    description: 'پیراشکی یکی از غذاهای خوشمزه‌ای است که داخل آن مواد مختلفی را می‌توان قرار داد. پیراشکی کالباس، پیراشکی گوشت، پیراشکی مرغ و قارچ از پیراشکی‌های معروف است که ما در اینجا طرز تهیه پیراشکی مرغ و قارچ را آموزش می‌دهیم:',\n    score: 4.6,\n    price: 171000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'سالاد مرغ و قارچ ترکیه‌ای',\n    description: 'این سالاد هم بسیار خوشمزه و هم خاص است. یک سالاد و غذای جدید برای ناها ریا شام می‌توانید درست کنید. برای تهیه سالاد مرغ و قارچ به مواد زیر نیاز داریم:',\n    score: 5,\n    price: 185000,\n    images: [ [Object] ],\n    comments: []\n  }\n]\" (type Array) at path \"_id\", menu.5.price: Path `price` is required., menu.5.description: Path `description` is required., menu.5.name: Path `name` is required."}
{"level":"error","message":"restaurant validation failed: menu.7._id: Cast to ObjectId failed for value \"[\n  {\n    name: 'سیب زمینی شکم پر',\n    description: 'غذایی جدید و خوشمزه و به راحتی با سیب زمینی درست می‌شود. برای درست کردن این غذا به موادی مانند :',\n    score: 4,\n    price: 197000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'کیک گوشت',\n    description: 'کیک گوشت یک غذای خوشمزه و جدید است که مانند کیک مرغ پر طرفداره. کیک مرغ ظاهر شیکی دارد و برای پذیرایی از مهمان برای ناهار و شام مناسب است.',\n    score: 5,\n    price: 185000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'کوکو ذرت (فریتر ذرت)',\n    description: 'یک غذای جدید و خوشمزه که با نان می‌توانید میل کنید. کوکوی ذرت غذایی مقوی برای کسانی است که به سبزیجات علاقه دارند. برای تهیه کوکو ذرت به مواد زیر نیاز داریم:',\n    score: 3,\n    price: 185000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'فطایر گوشت',\n    description: 'فطایر یک غذای عربی و خوشمزه است که از موادی مانند قارچ، فلفل دلمه‌ای، گوشت چرخ کرده، ذرت شیرین و خمیر آن از آرد نان فانتزی، کره، شیر، نمک و خمیر مایه درست می‌شود. داخل خمیر آن موادی که می‌گذارید کاملا سلیقه‌ای است. ',\n    score: 4.1,\n    price: 136100,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'بیکد زیتی',\n    description: 'بیکد زیتی یک غذای ایتالیایی امریکایی است که با پاستا زیتی و سس مخصوص درست می‌شود. برای تهیه این غذای خوشمزه به مواد زیر نیاز داریم.',\n    score: 4,\n    price: 115000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'گلت (galette) با بادمجان و قارچ',\n    description: 'گلت (galette) از خانواده تارت و پای به شمار میاد. در واقع خمیر گلت همان خمیر تارت و پای است با این تفاوت که خمیر گلت برخلاف تارت، نیازی به هیچ نوع قالبی ندارد و باید با دست به آن شکل داد! قطعا یکی از دلایلی که باعث محبوبیت گلت شده میتوان همین مورد را نام برد! نیازی به  قالب ندارد و تهیه آن آسان و ساده است!',\n    score: 2.4,\n    price: 214000,\n    images: [ [Object] ],\n    comments: []\n  },\n  {\n    name: 'کیک سبزیجات',\n    description: 'کیک سبزیجات یک غذای جدید و خوشمزه است که با یک ایده متفاوت می‌توانید آن را درست کنید. برای طرز تهیه کیک سبزیجات خوشمزه به مواد زیر نیاز دارید.',\n    score: 5,\n    price: 185000,\n    images: [ [Object] ],\n    comments: []\n  }\n]\" (type Array) at path \"_id\", menu.7.price: Path `price` is required., menu.7.description: Path `description` is required., menu.7.name: Path `name` is required."}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Cannot read properties of undefined (reading 'query') Cannot read properties of undefined (reading 'query')","stack":"TypeError: Cannot read properties of undefined (reading 'query')\n    at FoodRepo.BaseRepo.find (E:\\food\\repositories\\baseRepo.ts:17:9)\n    at FoodRepo.<anonymous> (E:\\food\\repositories\\foodRepo.ts:9:27)\n    at step (E:\\food\\repositories\\foodRepo.ts:48:23)\n    at Object.next (E:\\food\\repositories\\foodRepo.ts:29:53)\n    at E:\\food\\repositories\\foodRepo.ts:23:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\repositories\\foodRepo.ts:19:12)\n    at FoodRepo.findAllFoodsClient (E:\\food\\repositories\\foodRepo.ts:62:16)\n    at E:\\food\\app\\controllers\\food.ts:34:44\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.getAllFoods (E:\\food\\app\\controllers\\food.ts:122:16)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"this.find(...).select(...).toArray is not a function this.find(...).select(...).toArray is not a function","stack":"TypeError: this.find(...).select(...).toArray is not a function\n    at FoodRepo.<anonymous> (E:\\food\\repositories\\foodRepo.ts:9:51)\n    at step (E:\\food\\repositories\\foodRepo.ts:48:23)\n    at Object.next (E:\\food\\repositories\\foodRepo.ts:29:53)\n    at E:\\food\\repositories\\foodRepo.ts:23:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\repositories\\foodRepo.ts:19:12)\n    at FoodRepo.findAllFoodsClient (E:\\food\\repositories\\foodRepo.ts:62:16)\n    at E:\\food\\app\\controllers\\food.ts:34:44\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.getAllFoods (E:\\food\\app\\controllers\\food.ts:122:16)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)"}
{"level":"info","message":"db connected"}
{"level":"error","message":"this.find(...).toArray is not a function this.find(...).toArray is not a function","stack":"TypeError: this.find(...).toArray is not a function\n    at FoodRepo.<anonymous> (E:\\food\\repositories\\foodRepo.ts:9:36)\n    at step (E:\\food\\repositories\\foodRepo.ts:48:23)\n    at Object.next (E:\\food\\repositories\\foodRepo.ts:29:53)\n    at E:\\food\\repositories\\foodRepo.ts:23:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\repositories\\foodRepo.ts:19:12)\n    at FoodRepo.findAllFoodsClient (E:\\food\\repositories\\foodRepo.ts:62:16)\n    at E:\\food\\app\\controllers\\food.ts:34:44\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.getAllFoods (E:\\food\\app\\controllers\\food.ts:122:16)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Cannot read properties of undefined (reading 'query') Cannot read properties of undefined (reading 'query')","stack":"TypeError: Cannot read properties of undefined (reading 'query')\n    at FoodRepo.BaseRepo.find (E:\\food\\repositories\\baseRepo.ts:17:9)\n    at FoodRepo.<anonymous> (E:\\food\\repositories\\foodRepo.ts:17:27)\n    at step (E:\\food\\repositories\\foodRepo.ts:48:23)\n    at Object.next (E:\\food\\repositories\\foodRepo.ts:29:53)\n    at E:\\food\\repositories\\foodRepo.ts:23:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\repositories\\foodRepo.ts:19:12)\n    at FoodRepo.clientFindSingleFood (E:\\food\\repositories\\foodRepo.ts:76:16)\n    at E:\\food\\app\\controllers\\food.ts:38:44\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.findSingleFoodClient (E:\\food\\app\\controllers\\food.ts:136:16)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"this.findOne is not a function this.findOne is not a function","stack":"TypeError: this.findOne is not a function\n    at FoodRepo.<anonymous> (E:\\food\\repositories\\foodRepo.ts:17:27)\n    at step (E:\\food\\repositories\\foodRepo.ts:48:23)\n    at Object.next (E:\\food\\repositories\\foodRepo.ts:29:53)\n    at E:\\food\\repositories\\foodRepo.ts:23:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\repositories\\foodRepo.ts:19:12)\n    at FoodRepo.clientFindSingleFood (E:\\food\\repositories\\foodRepo.ts:76:16)\n    at E:\\food\\app\\controllers\\food.ts:38:44\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.findSingleFoodClient (E:\\food\\app\\controllers\\food.ts:136:16)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"this.findOne is not a function this.findOne is not a function","stack":"TypeError: this.findOne is not a function\n    at FoodRepo.<anonymous> (E:\\food\\repositories\\foodRepo.ts:17:27)\n    at step (E:\\food\\repositories\\foodRepo.ts:48:23)\n    at Object.next (E:\\food\\repositories\\foodRepo.ts:29:53)\n    at E:\\food\\repositories\\foodRepo.ts:23:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\repositories\\foodRepo.ts:19:12)\n    at FoodRepo.clientFindSingleFood (E:\\food\\repositories\\foodRepo.ts:76:16)\n    at E:\\food\\app\\controllers\\food.ts:38:44\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.findSingleFoodClient (E:\\food\\app\\controllers\\food.ts:136:16)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"this.findOne is not a function this.findOne is not a function","stack":"TypeError: this.findOne is not a function\n    at FoodRepo.<anonymous> (E:\\food\\repositories\\foodRepo.ts:17:27)\n    at step (E:\\food\\repositories\\foodRepo.ts:48:23)\n    at Object.next (E:\\food\\repositories\\foodRepo.ts:29:53)\n    at E:\\food\\repositories\\foodRepo.ts:23:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\repositories\\foodRepo.ts:19:12)\n    at FoodRepo.clientFindSingleFood (E:\\food\\repositories\\foodRepo.ts:76:16)\n    at E:\\food\\app\\controllers\\food.ts:38:44\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.findSingleFoodClient (E:\\food\\app\\controllers\\food.ts:136:16)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"this.findById is not a function this.findById is not a function","stack":"TypeError: this.findById is not a function\n    at FoodRepo.<anonymous> (E:\\food\\repositories\\foodRepo.ts:17:27)\n    at step (E:\\food\\repositories\\foodRepo.ts:48:23)\n    at Object.next (E:\\food\\repositories\\foodRepo.ts:29:53)\n    at E:\\food\\repositories\\foodRepo.ts:23:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\repositories\\foodRepo.ts:19:12)\n    at FoodRepo.clientFindSingleFood (E:\\food\\repositories\\foodRepo.ts:76:16)\n    at E:\\food\\app\\controllers\\food.ts:38:44\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.findSingleFoodClient (E:\\food\\app\\controllers\\food.ts:136:16)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)"}
{"level":"info","message":"db connected"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"{}\" (type Object) at path \"_id\" for model \"restaurant\" Cast to ObjectId failed for value \"{}\" (type Object) at path \"_id\" for model \"restaurant\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"{}\" (type Object) at path \"_id\" for model \"restaurant\"\n    at model.Query.exec (E:\\food\\node_modules\\.pnpm\\mongoose@5.13.16\\node_modules\\mongoose\\lib\\query.js:4498:21)\n    at model.Query.Query.then (E:\\food\\node_modules\\.pnpm\\mongoose@5.13.16\\node_modules\\mongoose\\lib\\query.js:4592:15)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)","stringValue":"\"{}\"","value":{},"valueType":"Object"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Cannot read properties of undefined (reading 'id') Cannot read properties of undefined (reading 'id')","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at FoodRepo.BaseRepo.findById (E:\\food\\repositories\\baseRepo.ts:29:11)\n    at FoodRepo.<anonymous> (E:\\food\\repositories\\foodRepo.ts:17:27)\n    at step (E:\\food\\repositories\\foodRepo.ts:48:23)\n    at Object.next (E:\\food\\repositories\\foodRepo.ts:29:53)\n    at E:\\food\\repositories\\foodRepo.ts:23:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\repositories\\foodRepo.ts:19:12)\n    at FoodRepo.clientFindSingleFood (E:\\food\\repositories\\foodRepo.ts:76:16)\n    at E:\\food\\app\\controllers\\food.ts:38:44\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.findSingleFoodClient (E:\\food\\app\\controllers\\food.ts:136:16)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Parameter \"filter\" to findOne() must be an object, got [object Object] Parameter \"filter\" to findOne() must be an object, got [object Object]","stack":"ObjectParameterError: Parameter \"filter\" to findOne() must be an object, got [object Object]\n    at model.Query.Query.findOne (E:\\food\\node_modules\\.pnpm\\mongoose@5.13.16\\node_modules\\mongoose\\lib\\query.js:2321:16)\n    at Function.findOne (E:\\food\\node_modules\\.pnpm\\mongoose@5.13.16\\node_modules\\mongoose\\lib\\model.js:2275:13)\n    at FoodRepo.BaseRepo.findById (E:\\food\\repositories\\baseRepo.ts:39:27)\n    at FoodRepo.<anonymous> (E:\\food\\repositories\\foodRepo.ts:17:27)\n    at step (E:\\food\\repositories\\foodRepo.ts:48:23)\n    at Object.next (E:\\food\\repositories\\foodRepo.ts:29:53)\n    at E:\\food\\repositories\\foodRepo.ts:23:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\repositories\\foodRepo.ts:19:12)\n    at FoodRepo.clientFindSingleFood (E:\\food\\repositories\\foodRepo.ts:76:16)\n    at E:\\food\\app\\controllers\\food.ts:38:44\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)"}
{"level":"info","message":"db connected"}
{"code":2,"codeName":"BadValue","level":"error","message":"unknown top level operator: $match. If you have a field name that starts with a '$' symbol, consider using $getField or $setField. unknown top level operator: $match. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.","name":"MongoError","ok":0,"stack":"MongoError: unknown top level operator: $match. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.\n    at MessageStream.messageHandler (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\connection.js:299:20)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at processIncomingData (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:144:12)\n    at MessageStream._write (E:\\food\\node_modules\\.pnpm\\mongodb@3.7.3\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:42:5)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)\n    at Socket.emit (node:events:513:28)\n    at Socket.emit (node:domain:489:12)\n    at addChunk (node:internal/streams/readable:315:12)\n    at readableAddChunk (node:internal/streams/readable:289:9)\n    at Socket.Readable.push (node:internal/streams/readable:228:10)\n    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters Argument passed in must be a single String of 12 bytes or a string of 24 hex characters","stack":"Error: Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\n    at new ObjectID (E:\\food\\node_modules\\.pnpm\\bson@1.1.6\\node_modules\\bson\\lib\\bson\\objectid.js:59:11)\n    at ObjectID (E:\\food\\node_modules\\.pnpm\\bson@1.1.6\\node_modules\\bson\\lib\\bson\\objectid.js:40:43)\n    at FoodRepo.<anonymous> (E:\\food\\repositories\\foodRepo.ts:20:22)\n    at step (E:\\food\\repositories\\foodRepo.ts:48:23)\n    at Object.next (E:\\food\\repositories\\foodRepo.ts:29:53)\n    at E:\\food\\repositories\\foodRepo.ts:23:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\repositories\\foodRepo.ts:19:12)\n    at FoodRepo.findRestaurant (E:\\food\\repositories\\foodRepo.ts:78:16)\n    at E:\\food\\app\\controllers\\food.ts:39:44\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.findSingleFoodClient (E:\\food\\app\\controllers\\food.ts:138:16)"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters Argument passed in must be a single String of 12 bytes or a string of 24 hex characters","stack":"Error: Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\n    at new ObjectID (E:\\food\\node_modules\\.pnpm\\bson@1.1.6\\node_modules\\bson\\lib\\bson\\objectid.js:59:11)\n    at ObjectID (E:\\food\\node_modules\\.pnpm\\bson@1.1.6\\node_modules\\bson\\lib\\bson\\objectid.js:40:43)\n    at FoodRepo.<anonymous> (E:\\food\\repositories\\foodRepo.ts:20:22)\n    at step (E:\\food\\repositories\\foodRepo.ts:48:23)\n    at Object.next (E:\\food\\repositories\\foodRepo.ts:29:53)\n    at E:\\food\\repositories\\foodRepo.ts:23:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\repositories\\foodRepo.ts:19:12)\n    at FoodRepo.findRestaurant (E:\\food\\repositories\\foodRepo.ts:78:16)\n    at E:\\food\\app\\controllers\\food.ts:39:44\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.findSingleFoodClient (E:\\food\\app\\controllers\\food.ts:138:16)"}
{"level":"info","message":"db connected"}
{"level":"error","message":"this.findById is not a function this.findById is not a function","stack":"TypeError: this.findById is not a function\n    at FoodRepo.<anonymous> (E:\\food\\repositories\\foodRepo.ts:18:27)\n    at step (E:\\food\\repositories\\foodRepo.ts:48:23)\n    at Object.next (E:\\food\\repositories\\foodRepo.ts:29:53)\n    at E:\\food\\repositories\\foodRepo.ts:23:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\repositories\\foodRepo.ts:19:12)\n    at FoodRepo.findRestaurant (E:\\food\\repositories\\foodRepo.ts:79:16)\n    at E:\\food\\app\\controllers\\food.ts:39:44\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.findSingleFoodClient (E:\\food\\app\\controllers\\food.ts:138:16)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)"}
{"level":"info","message":"db connected"}
{"level":"error","message":"this.findById is not a function this.findById is not a function","stack":"TypeError: this.findById is not a function\n    at FoodRepo.<anonymous> (E:\\food\\repositories\\foodRepo.ts:19:27)\n    at step (E:\\food\\repositories\\foodRepo.ts:48:23)\n    at Object.next (E:\\food\\repositories\\foodRepo.ts:29:53)\n    at E:\\food\\repositories\\foodRepo.ts:23:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\repositories\\foodRepo.ts:19:12)\n    at FoodRepo.findRestaurant (E:\\food\\repositories\\foodRepo.ts:79:16)\n    at E:\\food\\app\\controllers\\food.ts:39:44\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.findSingleFoodClient (E:\\food\\app\\controllers\\food.ts:138:16)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)"}
{"level":"info","message":"db connected"}
{"level":"error","message":"this.findById is not a function this.findById is not a function","stack":"TypeError: this.findById is not a function\n    at FoodRepo.<anonymous> (E:\\food\\repositories\\foodRepo.ts:19:27)\n    at step (E:\\food\\repositories\\foodRepo.ts:48:23)\n    at Object.next (E:\\food\\repositories\\foodRepo.ts:29:53)\n    at E:\\food\\repositories\\foodRepo.ts:23:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\repositories\\foodRepo.ts:19:12)\n    at FoodRepo.findRestaurant (E:\\food\\repositories\\foodRepo.ts:79:16)\n    at E:\\food\\app\\controllers\\food.ts:39:44\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.findSingleFoodClient (E:\\food\\app\\controllers\\food.ts:138:16)\n    at newFn (E:\\food\\node_modules\\.pnpm\\express-async-errors@3.1.1_express@4.18.2\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\.pnpm\\express@4.18.2\\node_modules\\express\\lib\\router\\layer.js:95:5)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters Argument passed in must be a single String of 12 bytes or a string of 24 hex characters","stack":"Error: Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\n    at new ObjectID (E:\\food\\node_modules\\.pnpm\\bson@1.1.6\\node_modules\\bson\\lib\\bson\\objectid.js:59:11)\n    at ObjectID (E:\\food\\node_modules\\.pnpm\\bson@1.1.6\\node_modules\\bson\\lib\\bson\\objectid.js:40:43)\n    at FoodRepo.<anonymous> (E:\\food\\repositories\\foodRepo.ts:21:22)\n    at step (E:\\food\\repositories\\foodRepo.ts:48:23)\n    at Object.next (E:\\food\\repositories\\foodRepo.ts:29:53)\n    at E:\\food\\repositories\\foodRepo.ts:23:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\repositories\\foodRepo.ts:19:12)\n    at FoodRepo.findRestaurant (E:\\food\\repositories\\foodRepo.ts:79:16)\n    at E:\\food\\app\\controllers\\food.ts:39:44\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.findSingleFoodClient (E:\\food\\app\\controllers\\food.ts:138:16)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters Argument passed in must be a single String of 12 bytes or a string of 24 hex characters","stack":"Error: Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\n    at new ObjectID (E:\\food\\node_modules\\.pnpm\\bson@1.1.6\\node_modules\\bson\\lib\\bson\\objectid.js:59:11)\n    at ObjectID (E:\\food\\node_modules\\.pnpm\\bson@1.1.6\\node_modules\\bson\\lib\\bson\\objectid.js:40:43)\n    at FoodRepo.<anonymous> (E:\\food\\repositories\\foodRepo.ts:21:22)\n    at step (E:\\food\\repositories\\foodRepo.ts:48:23)\n    at Object.next (E:\\food\\repositories\\foodRepo.ts:29:53)\n    at E:\\food\\repositories\\foodRepo.ts:23:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\repositories\\foodRepo.ts:19:12)\n    at FoodRepo.findRestaurant (E:\\food\\repositories\\foodRepo.ts:79:16)\n    at E:\\food\\app\\controllers\\food.ts:39:44\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.findSingleFoodClient (E:\\food\\app\\controllers\\food.ts:138:16)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"body":"{\r\n    \"foodName\":\"املت ایتالیایی\",\r\n}","expose":true,"level":"error","message":"Unexpected token } in JSON at position 37 Unexpected token } in JSON at position 37","stack":"SyntaxError: Unexpected token } in JSON at position 37\n    at JSON.parse (<anonymous>)\n    at parse (E:\\food\\node_modules\\body-parser\\lib\\types\\json.js:89:19)\n    at E:\\food\\node_modules\\body-parser\\lib\\read.js:128:18\n    at AsyncResource.runInAsyncScope (node:async_hooks:203:9)\n    at invokeCallback (E:\\food\\node_modules\\raw-body\\index.js:231:16)\n    at done (E:\\food\\node_modules\\raw-body\\index.js:220:7)\n    at IncomingMessage.onEnd (E:\\food\\node_modules\\raw-body\\index.js:280:7)\n    at IncomingMessage.emit (node:events:525:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1358:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)","status":400,"statusCode":400,"type":"entity.parse.failed"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters Argument passed in must be a single String of 12 bytes or a string of 24 hex characters","stack":"Error: Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\n    at new ObjectID (E:\\food\\node_modules\\.pnpm\\bson@1.1.6\\node_modules\\bson\\lib\\bson\\objectid.js:59:11)\n    at ObjectID (E:\\food\\node_modules\\.pnpm\\bson@1.1.6\\node_modules\\bson\\lib\\bson\\objectid.js:40:43)\n    at FoodRepo.<anonymous> (E:\\food\\repositories\\foodRepo.ts:20:22)\n    at step (E:\\food\\repositories\\foodRepo.ts:48:23)\n    at Object.next (E:\\food\\repositories\\foodRepo.ts:29:53)\n    at E:\\food\\repositories\\foodRepo.ts:23:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\repositories\\foodRepo.ts:19:12)\n    at FoodRepo.findRestaurant (E:\\food\\repositories\\foodRepo.ts:79:16)\n    at E:\\food\\app\\controllers\\food.ts:20:44\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.getSingle (E:\\food\\app\\controllers\\food.ts:84:16)"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters Argument passed in must be a single String of 12 bytes or a string of 24 hex characters","stack":"Error: Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\n    at new ObjectID (E:\\food\\node_modules\\.pnpm\\bson@1.1.6\\node_modules\\bson\\lib\\bson\\objectid.js:59:11)\n    at ObjectID (E:\\food\\node_modules\\.pnpm\\bson@1.1.6\\node_modules\\bson\\lib\\bson\\objectid.js:40:43)\n    at FoodRepo.<anonymous> (E:\\food\\repositories\\foodRepo.ts:21:22)\n    at step (E:\\food\\repositories\\foodRepo.ts:48:23)\n    at Object.next (E:\\food\\repositories\\foodRepo.ts:29:53)\n    at E:\\food\\repositories\\foodRepo.ts:23:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\repositories\\foodRepo.ts:19:12)\n    at FoodRepo.findRestaurant (E:\\food\\repositories\\foodRepo.ts:79:16)\n    at E:\\food\\app\\controllers\\food.ts:20:44\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.getSingle (E:\\food\\app\\controllers\\food.ts:84:16)"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters Argument passed in must be a single String of 12 bytes or a string of 24 hex characters","stack":"Error: Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\n    at new ObjectID (E:\\food\\node_modules\\.pnpm\\bson@1.1.6\\node_modules\\bson\\lib\\bson\\objectid.js:59:11)\n    at ObjectID (E:\\food\\node_modules\\.pnpm\\bson@1.1.6\\node_modules\\bson\\lib\\bson\\objectid.js:40:43)\n    at FoodRepo.<anonymous> (E:\\food\\repositories\\foodRepo.ts:23:22)\n    at step (E:\\food\\repositories\\foodRepo.ts:48:23)\n    at Object.next (E:\\food\\repositories\\foodRepo.ts:29:53)\n    at E:\\food\\repositories\\foodRepo.ts:23:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\repositories\\foodRepo.ts:19:12)\n    at FoodRepo.findRestaurant (E:\\food\\repositories\\foodRepo.ts:79:16)\n    at E:\\food\\app\\controllers\\food.ts:20:44\n    at step (E:\\food\\app\\controllers\\food.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\food.ts:25:53)\n    at E:\\food\\app\\controllers\\food.ts:19:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\food.ts:15:12)\n    at FoodController.getSingle (E:\\food\\app\\controllers\\food.ts:84:16)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"E11000 duplicate key error collection: foodino.restaurants index: _id_ dup key: { _id: { oid: \"64770e4ef4466d102819619c\" } }"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"data and salt arguments required data and salt arguments required","stack":"Error: data and salt arguments required\n    at Object.hashSync (E:\\food\\node_modules\\bcrypt\\bcrypt.js:91:15)\n    at Helpers.hashPassword (E:\\food\\app\\helpers\\helpers.ts:12:23)\n    at E:\\food\\app\\controllers\\user.ts:12:40\n    at step (E:\\food\\app\\controllers\\user.ts:33:23)\n    at Object.next (E:\\food\\app\\controllers\\user.ts:14:53)\n    at E:\\food\\app\\controllers\\user.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\user.ts:4:12)\n    at UserController.signUp (E:\\food\\app\\controllers\\user.ts:49:16)\n    at newFn (E:\\food\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\food\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (E:\\food\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (E:\\food\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\food\\node_modules\\express\\lib\\router\\index.js:284:15"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"this.signWithEmail is not a function this.signWithEmail is not a function","stack":"TypeError: this.signWithEmail is not a function\n    at E:\\food\\app\\controllers\\user.ts:14:18\n    at step (E:\\food\\app\\controllers\\user.ts:33:23)\n    at Object.next (E:\\food\\app\\controllers\\user.ts:14:53)\n    at E:\\food\\app\\controllers\\user.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\user.ts:4:12)\n    at UserController.signUp (E:\\food\\app\\controllers\\user.ts:50:16)\n    at newFn (E:\\food\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\food\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at module.exports (E:\\food\\app\\middlewares\\validator.ts:9:16)\n    at newFn (E:\\food\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\food\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at middleware (E:\\food\\node_modules\\express-validator\\src\\middlewares\\check.js:16:13)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"error","message":"this.signWithEmail is not a function this.signWithEmail is not a function","stack":"TypeError: this.signWithEmail is not a function\n    at E:\\food\\app\\controllers\\user.ts:15:18\n    at step (E:\\food\\app\\controllers\\user.ts:33:23)\n    at Object.next (E:\\food\\app\\controllers\\user.ts:14:53)\n    at E:\\food\\app\\controllers\\user.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\food\\app\\controllers\\user.ts:4:12)\n    at UserController.signUp (E:\\food\\app\\controllers\\user.ts:50:16)\n    at newFn (E:\\food\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\food\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at module.exports (E:\\food\\app\\middlewares\\validator.ts:9:16)\n    at newFn (E:\\food\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (E:\\food\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\food\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at middleware (E:\\food\\node_modules\\express-validator\\src\\middlewares\\check.js:16:13)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Expected \"payload\" to be a plain object."}
{"level":"info","message":"db connected"}
{"level":"error","message":"data and hash arguments required"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Expected \"payload\" to be a plain object. Expected \"payload\" to be a plain object.","stack":"Error: Expected \"payload\" to be a plain object.\n    at validate (E:\\food\\node_modules\\jsonwebtoken\\sign.js:40:11)\n    at validatePayload (E:\\food\\node_modules\\jsonwebtoken\\sign.js:62:10)\n    at Object.module.exports [as sign] (E:\\food\\node_modules\\jsonwebtoken\\sign.js:114:7)\n    at Helpers.generateToken (E:\\food\\app\\helpers\\helpers.ts:21:27)\n    at UserController.<anonymous> (E:\\food\\app\\controllers\\user.ts:39:41)\n    at step (E:\\food\\app\\controllers\\user.ts:33:23)\n    at Object.next (E:\\food\\app\\controllers\\user.ts:14:53)\n    at fulfilled (E:\\food\\app\\controllers\\user.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"error","message":"data and hash arguments required data and hash arguments required","stack":"Error: data and hash arguments required\n    at Object.compareSync (E:\\food\\node_modules\\bcrypt\\bcrypt.js:166:15)\n    at Helpers.checkPassword (E:\\food\\app\\helpers\\helpers.ts:18:23)\n    at UserController.<anonymous> (E:\\food\\app\\controllers\\user.ts:50:43)\n    at step (E:\\food\\app\\controllers\\user.ts:33:23)\n    at Object.next (E:\\food\\app\\controllers\\user.ts:14:53)\n    at fulfilled (E:\\food\\app\\controllers\\user.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"error","message":"data and hash arguments required data and hash arguments required","stack":"Error: data and hash arguments required\n    at Object.compareSync (E:\\food\\node_modules\\bcrypt\\bcrypt.js:166:15)\n    at Helpers.checkPassword (E:\\food\\app\\helpers\\helpers.ts:18:23)\n    at UserController.<anonymous> (E:\\food\\app\\controllers\\user.ts:51:43)\n    at step (E:\\food\\app\\controllers\\user.ts:33:23)\n    at Object.next (E:\\food\\app\\controllers\\user.ts:14:53)\n    at fulfilled (E:\\food\\app\\controllers\\user.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"error","message":"data and hash arguments required data and hash arguments required","stack":"Error: data and hash arguments required\n    at Object.compareSync (E:\\food\\node_modules\\bcrypt\\bcrypt.js:166:15)\n    at Helpers.checkPassword (E:\\food\\app\\helpers\\helpers.ts:18:23)\n    at UserController.<anonymous> (E:\\food\\app\\controllers\\user.ts:51:43)\n    at step (E:\\food\\app\\controllers\\user.ts:33:23)\n    at Object.next (E:\\food\\app\\controllers\\user.ts:14:53)\n    at fulfilled (E:\\food\\app\\controllers\\user.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"error","message":"data and hash arguments required data and hash arguments required","stack":"Error: data and hash arguments required\n    at Object.compareSync (E:\\food\\node_modules\\bcrypt\\bcrypt.js:166:15)\n    at Helpers.checkPassword (E:\\food\\app\\helpers\\helpers.ts:18:23)\n    at UserController.<anonymous> (E:\\food\\app\\controllers\\user.ts:51:43)\n    at step (E:\\food\\app\\controllers\\user.ts:33:23)\n    at Object.next (E:\\food\\app\\controllers\\user.ts:14:53)\n    at fulfilled (E:\\food\\app\\controllers\\user.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"error","message":"Cannot read properties of null (reading 'password') Cannot read properties of null (reading 'password')","stack":"TypeError: Cannot read properties of null (reading 'password')\n    at UserController.<anonymous> (E:\\food\\app\\controllers\\user.ts:37:65)\n    at step (E:\\food\\app\\controllers\\user.ts:44:23)\n    at Object.next (E:\\food\\app\\controllers\\user.ts:25:53)\n    at fulfilled (E:\\food\\app\\controllers\\user.ts:16:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
{"level":"info","message":"db connected"}
